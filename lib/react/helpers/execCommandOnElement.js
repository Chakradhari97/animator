'use strict';

module.exports = function execCommandOnElement(el, commandName, value) {
  if (typeof value === 'undefined') {
    value = null;
  }
  if (typeof window.getSelection !== 'undefined') {
    // Non-IE case
    var sel = window.getSelection();

    // Save the current selection
    var savedRanges = [];
    for (var i = 0, len = sel.rangeCount; i < len; ++i) {
      savedRanges[i] = sel.getRangeAt(i).cloneRange();
    }

    // Temporarily enable designMode so that
    // document.execCommand() will work
    document.designMode = 'on';

    // Select the element's content
    sel = window.getSelection();
    var range = document.createRange();
    range.selectNodeContents(el);
    sel.removeAllRanges();
    sel.addRange(range);

    // Execute the command
    document.execCommand(commandName, false, value);

    // Disable designMode
    document.designMode = 'off';

    // Restore the previous selection
    sel = window.getSelection();
    sel.removeAllRanges();
    for (var j = 0, len2 = savedRanges.length; j < len2; ++j) {
      sel.addRange(savedRanges[j]);
    }
  } else if (typeof document.body.createTextRange !== 'undefined') {
    // IE case
    var textRange = document.body.createTextRange();
    textRange.moveToElementText(el);
    textRange.execCommand(commandName, false, value);
  }
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9yZWFjdC9oZWxwZXJzL2V4ZWNDb21tYW5kT25FbGVtZW50LmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJleGVjQ29tbWFuZE9uRWxlbWVudCIsImVsIiwiY29tbWFuZE5hbWUiLCJ2YWx1ZSIsIndpbmRvdyIsImdldFNlbGVjdGlvbiIsInNlbCIsInNhdmVkUmFuZ2VzIiwiaSIsImxlbiIsInJhbmdlQ291bnQiLCJnZXRSYW5nZUF0IiwiY2xvbmVSYW5nZSIsImRvY3VtZW50IiwiZGVzaWduTW9kZSIsInJhbmdlIiwiY3JlYXRlUmFuZ2UiLCJzZWxlY3ROb2RlQ29udGVudHMiLCJyZW1vdmVBbGxSYW5nZXMiLCJhZGRSYW5nZSIsImV4ZWNDb21tYW5kIiwiaiIsImxlbjIiLCJsZW5ndGgiLCJib2R5IiwiY3JlYXRlVGV4dFJhbmdlIiwidGV4dFJhbmdlIiwibW92ZVRvRWxlbWVudFRleHQiXSwibWFwcGluZ3MiOiI7O0FBQUFBLE9BQU9DLE9BQVAsR0FBaUIsU0FBU0Msb0JBQVQsQ0FBK0JDLEVBQS9CLEVBQW1DQyxXQUFuQyxFQUFnREMsS0FBaEQsRUFBdUQ7QUFDdEUsTUFBSSxPQUFPQSxLQUFQLEtBQWlCLFdBQXJCLEVBQWtDO0FBQ2hDQSxZQUFRLElBQVI7QUFDRDtBQUNELE1BQUksT0FBT0MsT0FBT0MsWUFBZCxLQUErQixXQUFuQyxFQUFnRDtBQUM5QztBQUNBLFFBQUlDLE1BQU1GLE9BQU9DLFlBQVAsRUFBVjs7QUFFQTtBQUNBLFFBQUlFLGNBQWMsRUFBbEI7QUFDQSxTQUFLLElBQUlDLElBQUksQ0FBUixFQUFXQyxNQUFNSCxJQUFJSSxVQUExQixFQUFzQ0YsSUFBSUMsR0FBMUMsRUFBK0MsRUFBRUQsQ0FBakQsRUFBb0Q7QUFDbERELGtCQUFZQyxDQUFaLElBQWlCRixJQUFJSyxVQUFKLENBQWVILENBQWYsRUFBa0JJLFVBQWxCLEVBQWpCO0FBQ0Q7O0FBRUQ7QUFDQTtBQUNBQyxhQUFTQyxVQUFULEdBQXNCLElBQXRCOztBQUVBO0FBQ0FSLFVBQU1GLE9BQU9DLFlBQVAsRUFBTjtBQUNBLFFBQUlVLFFBQVFGLFNBQVNHLFdBQVQsRUFBWjtBQUNBRCxVQUFNRSxrQkFBTixDQUF5QmhCLEVBQXpCO0FBQ0FLLFFBQUlZLGVBQUo7QUFDQVosUUFBSWEsUUFBSixDQUFhSixLQUFiOztBQUVBO0FBQ0FGLGFBQVNPLFdBQVQsQ0FBcUJsQixXQUFyQixFQUFrQyxLQUFsQyxFQUF5Q0MsS0FBekM7O0FBRUE7QUFDQVUsYUFBU0MsVUFBVCxHQUFzQixLQUF0Qjs7QUFFQTtBQUNBUixVQUFNRixPQUFPQyxZQUFQLEVBQU47QUFDQUMsUUFBSVksZUFBSjtBQUNBLFNBQUssSUFBSUcsSUFBSSxDQUFSLEVBQVdDLE9BQU9mLFlBQVlnQixNQUFuQyxFQUEyQ0YsSUFBSUMsSUFBL0MsRUFBcUQsRUFBRUQsQ0FBdkQsRUFBMEQ7QUFDeERmLFVBQUlhLFFBQUosQ0FBYVosWUFBWWMsQ0FBWixDQUFiO0FBQ0Q7QUFDRixHQWpDRCxNQWlDTyxJQUFJLE9BQU9SLFNBQVNXLElBQVQsQ0FBY0MsZUFBckIsS0FBeUMsV0FBN0MsRUFBMEQ7QUFDL0Q7QUFDQSxRQUFJQyxZQUFZYixTQUFTVyxJQUFULENBQWNDLGVBQWQsRUFBaEI7QUFDQUMsY0FBVUMsaUJBQVYsQ0FBNEIxQixFQUE1QjtBQUNBeUIsY0FBVU4sV0FBVixDQUFzQmxCLFdBQXRCLEVBQW1DLEtBQW5DLEVBQTBDQyxLQUExQztBQUNEO0FBQ0YsQ0EzQ0QiLCJmaWxlIjoiZXhlY0NvbW1hbmRPbkVsZW1lbnQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGV4ZWNDb21tYW5kT25FbGVtZW50IChlbCwgY29tbWFuZE5hbWUsIHZhbHVlKSB7XG4gIGlmICh0eXBlb2YgdmFsdWUgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgdmFsdWUgPSBudWxsXG4gIH1cbiAgaWYgKHR5cGVvZiB3aW5kb3cuZ2V0U2VsZWN0aW9uICE9PSAndW5kZWZpbmVkJykge1xuICAgIC8vIE5vbi1JRSBjYXNlXG4gICAgdmFyIHNlbCA9IHdpbmRvdy5nZXRTZWxlY3Rpb24oKVxuXG4gICAgLy8gU2F2ZSB0aGUgY3VycmVudCBzZWxlY3Rpb25cbiAgICB2YXIgc2F2ZWRSYW5nZXMgPSBbXVxuICAgIGZvciAodmFyIGkgPSAwLCBsZW4gPSBzZWwucmFuZ2VDb3VudDsgaSA8IGxlbjsgKytpKSB7XG4gICAgICBzYXZlZFJhbmdlc1tpXSA9IHNlbC5nZXRSYW5nZUF0KGkpLmNsb25lUmFuZ2UoKVxuICAgIH1cblxuICAgIC8vIFRlbXBvcmFyaWx5IGVuYWJsZSBkZXNpZ25Nb2RlIHNvIHRoYXRcbiAgICAvLyBkb2N1bWVudC5leGVjQ29tbWFuZCgpIHdpbGwgd29ya1xuICAgIGRvY3VtZW50LmRlc2lnbk1vZGUgPSAnb24nXG5cbiAgICAvLyBTZWxlY3QgdGhlIGVsZW1lbnQncyBjb250ZW50XG4gICAgc2VsID0gd2luZG93LmdldFNlbGVjdGlvbigpXG4gICAgdmFyIHJhbmdlID0gZG9jdW1lbnQuY3JlYXRlUmFuZ2UoKVxuICAgIHJhbmdlLnNlbGVjdE5vZGVDb250ZW50cyhlbClcbiAgICBzZWwucmVtb3ZlQWxsUmFuZ2VzKClcbiAgICBzZWwuYWRkUmFuZ2UocmFuZ2UpXG5cbiAgICAvLyBFeGVjdXRlIHRoZSBjb21tYW5kXG4gICAgZG9jdW1lbnQuZXhlY0NvbW1hbmQoY29tbWFuZE5hbWUsIGZhbHNlLCB2YWx1ZSlcblxuICAgIC8vIERpc2FibGUgZGVzaWduTW9kZVxuICAgIGRvY3VtZW50LmRlc2lnbk1vZGUgPSAnb2ZmJ1xuXG4gICAgLy8gUmVzdG9yZSB0aGUgcHJldmlvdXMgc2VsZWN0aW9uXG4gICAgc2VsID0gd2luZG93LmdldFNlbGVjdGlvbigpXG4gICAgc2VsLnJlbW92ZUFsbFJhbmdlcygpXG4gICAgZm9yICh2YXIgaiA9IDAsIGxlbjIgPSBzYXZlZFJhbmdlcy5sZW5ndGg7IGogPCBsZW4yOyArK2opIHtcbiAgICAgIHNlbC5hZGRSYW5nZShzYXZlZFJhbmdlc1tqXSlcbiAgICB9XG4gIH0gZWxzZSBpZiAodHlwZW9mIGRvY3VtZW50LmJvZHkuY3JlYXRlVGV4dFJhbmdlICE9PSAndW5kZWZpbmVkJykge1xuICAgIC8vIElFIGNhc2VcbiAgICB2YXIgdGV4dFJhbmdlID0gZG9jdW1lbnQuYm9keS5jcmVhdGVUZXh0UmFuZ2UoKVxuICAgIHRleHRSYW5nZS5tb3ZlVG9FbGVtZW50VGV4dChlbClcbiAgICB0ZXh0UmFuZ2UuZXhlY0NvbW1hbmQoY29tbWFuZE5hbWUsIGZhbHNlLCB2YWx1ZSlcbiAgfVxufVxuIl19