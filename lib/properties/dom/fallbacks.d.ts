declare let Layout3D: any;
declare let has: any;
declare let TEXT_CONTENT_FALLBACKS: {
    content: any;
};
declare let LAYOUT_DEFAULTS: any;
declare let LAYOUT_3D_FALLBACKS: {
    "shown": any;
    "opacity": any;
    "mount.x": any;
    "mount.y": any;
    "mount.z": any;
    "align.x": any;
    "align.y": any;
    "align.z": any;
    "origin.x": any;
    "origin.y": any;
    "origin.z": any;
    "translation.x": any;
    "translation.y": any;
    "translation.z": any;
    "rotation.x": any;
    "rotation.y": any;
    "rotation.z": any;
    "scale.x": any;
    "scale.y": any;
    "scale.z": any;
    "sizeAbsolute.x": any;
    "sizeAbsolute.y": any;
    "sizeAbsolute.z": any;
    "sizeProportional.x": any;
    "sizeProportional.y": any;
    "sizeProportional.z": any;
    "sizeDifferential.x": any;
    "sizeDifferential.y": any;
    "sizeDifferential.z": any;
    "sizeMode.x": any;
    "sizeMode.y": any;
    "sizeMode.z": any;
};
declare let LAYOUT_2D_FALLBACKS: {
    "shown": any;
    "opacity": any;
    "mount.x": any;
    "mount.y": any;
    "align.x": any;
    "align.y": any;
    "origin.x": any;
    "origin.y": any;
    "translation.x": any;
    "translation.y": any;
    "translation.z": any;
    "rotation.x": any;
    "rotation.y": any;
    "rotation.z": any;
    "scale.x": any;
    "scale.y": any;
    "sizeAbsolute.x": any;
    "sizeAbsolute.y": any;
    "sizeProportional.x": any;
    "sizeProportional.y": any;
    "sizeDifferential.x": any;
    "sizeDifferential.y": any;
    "sizeMode.x": any;
    "sizeMode.y": any;
};
declare let PRESENTATION_FALLBACKS: {
    alignmentBaseline: string;
    baselineShift: string;
    clipPath: string;
    clipRule: string;
    clip: string;
    colorInterpolationFilters: string;
    colorInterpolation: string;
    colorProfile: string;
    colorRendering: string;
    color: string;
    cursor: string;
    direction: string;
    display: string;
    dominantBaseline: string;
    enableBackground: string;
    fillOpacity: string;
    fillRule: string;
    fill: string;
    filter: string;
    floodColor: string;
    floodOpacity: string;
    fontFamily: string;
    fontSizeAdjust: string;
    fontSize: string;
    fontStretch: string;
    fontStyle: string;
    fontVariant: string;
    fontWeight: string;
    glyphOrientationHorizontal: string;
    glyphOrientationVertical: string;
    imageRendering: string;
    kerning: string;
    letterSpacing: string;
    lightingColor: string;
    markerEnd: string;
    markerMid: string;
    markerStart: string;
    mask: string;
    overflow: string;
    overflowX: string;
    overflowY: string;
    pointerEvents: string;
    shapeRendering: string;
    stopColor: string;
    stopOpacity: string;
    strokeDasharray: string;
    strokeDashoffset: string;
    strokeLinecap: string;
    strokeLinejoin: string;
    strokeMiterlimit: string;
    strokeOpacity: string;
    strokeWidth: string;
    stroke: string;
    textAnchor: string;
    textDecoration: string;
    textRendering: string;
    unicodeBidi: string;
    visibility: string;
    wordSpacing: string;
    writingMode: string;
};
declare let STYLE_FALLBACKS: {
    "style.alignmentBaseline": string;
    "style.background": string;
    "style.backgroundAttachment": string;
    "style.backgroundColor": string;
    "style.backgroundImage": string;
    "style.backgroundPosition": string;
    "style.backgroundRepeat": string;
    "style.baselineShift": string;
    "style.border": string;
    "style.borderBottom": string;
    "style.borderBottomColor": string;
    "style.borderBottomStyle": string;
    "style.borderBottomWidth": string;
    "style.borderColor": string;
    "style.borderLeft": string;
    "style.borderLeftColor": string;
    "style.borderLeftStyle": string;
    "style.borderLeftWidth": string;
    "style.borderRight": string;
    "style.borderRightColor": string;
    "style.borderRightStyle": string;
    "style.borderRightWidth": string;
    "style.borderStyle": string;
    "style.borderTop": string;
    "style.borderTopColor": string;
    "style.borderTopStyle": string;
    "style.borderTopWidth": string;
    "style.borderWidth": string;
    "style.clear": string;
    "style.clip": string;
    "style.clipPath": string;
    "style.clipRule": string;
    "style.color": string;
    "style.colorInterpolation": string;
    "style.colorInterpolationFilters": string;
    "style.colorProfile": string;
    "style.colorRendering": string;
    "style.cssFloat": string;
    "style.cursor": string;
    "style.direction": string;
    "style.display": string;
    "style.dominantBaseline": string;
    "style.enableBackground": string;
    "style.fill": string;
    "style.fillOpacity": string;
    "style.fillRule": string;
    "style.filter": string;
    "style.floodColor": string;
    "style.floodOpacity": string;
    "style.font": string;
    "style.fontFamily": string;
    "style.fontSize": string;
    "style.fontSizeAdjust": string;
    "style.fontStretch": string;
    "style.fontStyle": string;
    "style.fontVariant": string;
    "style.fontWeight": string;
    "style.glyphOrientationHorizontal": string;
    "style.glyphOrientationVertical": string;
    "style.height": string;
    "style.imageRendering": string;
    "style.kerning": string;
    "style.left": string;
    "style.letterSpacing": string;
    "style.lightingColor": string;
    "style.lineHeight": string;
    "style.listStyle": string;
    "style.listStyleImage": string;
    "style.listStylePosition": string;
    "style.listStyleType": string;
    "style.margin": string;
    "style.marginBottom": string;
    "style.marginLeft": string;
    "style.marginRight": string;
    "style.marginTop": string;
    "style.markerEnd": string;
    "style.markerMid": string;
    "style.markerStart": string;
    "style.mask": string;
    "style.opacity": string;
    "style.overflow": string;
    "style.overflowX": string;
    "style.overflowY": string;
    "style.padding": string;
    "style.paddingBottom": string;
    "style.paddingLeft": string;
    "style.paddingRight": string;
    "style.paddingTop": string;
    "style.pageBreakAfter": string;
    "style.pageBreakBefore": string;
    "style.pointerEvents": string;
    "style.position": string;
    "style.shapeRendering": string;
    "style.stopColor": string;
    "style.stopOpacity": string;
    "style.stroke": string;
    "style.strokeDasharray": string;
    "style.strokeDashoffset": string;
    "style.strokeLinecap": string;
    "style.strokeLinejoin": string;
    "style.strokeMiterlimit": string;
    "style.strokeOpacity": string;
    "style.strokeWidth": string;
    "style.textAlign": string;
    "style.textAnchor": string;
    "style.textDecoration": string;
    "style.textDecorationBlink": string;
    "style.textDecorationLineThrough": string;
    "style.textDecorationNone": string;
    "style.textDecorationOverline": string;
    "style.textDecorationUnderline": string;
    "style.textIndent": string;
    "style.textRendering": string;
    "style.textTransform": string;
    "style.top": string;
    "style.unicodeBidi": string;
    "style.verticalAlign": string;
    "style.visibility": string;
    "style.width": string;
    "style.wordSpacing": string;
    "style.writingMode": string;
    "style.zIndex": number;
    "style.WebkitTapHighlightColor": string;
};
declare let FILTER_FALLBACKS: {
    x: string;
    y: string;
    width: string;
    height: string;
    filterRes: string;
    filterUnits: string;
    primitiveUnits: string;
};
declare let HTML_STYLE_SHORTHAND_FALLBACKS: {
    backgroundColor: string;
};
declare let CONTROL_FLOW_FALLBACKS: {
    "controlFlow.repeat": any;
    "controlFlow.placeholder": any;
};
