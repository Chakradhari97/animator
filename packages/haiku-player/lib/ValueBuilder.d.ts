declare let Transitions: any;
declare let BasicUtils: any;
declare let DOMSchema: any;
declare let DOMValueParsers: any;
declare let enhance: any;
declare let HaikuHelpers: any;
declare let assign: any;
declare let FUNCTION: string;
declare let OBJECT: string;
declare let INJECTABLES: {};
declare let EVENT_SCHEMA: {
    mouse: {
        x: string;
        y: string;
        isDown: string;
    };
    touches: {
        x: string;
        y: string;
    }[];
    mouches: {
        x: string;
        y: string;
    }[];
    keys: {
        which: string;
        code: string;
    }[];
};
declare let ELEMENT_SCHEMA: {
    properties(element: any): any;
};
declare function assignElementInjectables(obj: any, key: any, summonSpec: any, hostInstance: any, element: any): {};
declare let BUILTIN_INJECTABLES: {
    Infinity: number;
    NaN: number;
    undefined: any;
    Object: ObjectConstructor;
    Boolean: BooleanConstructor;
    Math: Math;
    Date: DateConstructor;
    JSON: JSON;
    Number: NumberConstructor;
    String: StringConstructor;
    RegExp: RegExpConstructor;
    Array: ArrayConstructor;
    isFinite: (number: number) => boolean;
    isNaN: (number: number) => boolean;
    parseFloat: (string: string) => number;
    parseInt: (s: string, radix?: number) => number;
    decodeURI: (encodedURI: string) => string;
    decodeURIComponent: (encodedURIComponent: string) => string;
    encodeURI: (uri: string) => string;
    encodeURIComponent: (uriComponent: string) => string;
    escape: any;
    unescape: any;
    Error: ErrorConstructor;
    ReferenceError: ReferenceErrorConstructor;
    SyntaxError: SyntaxErrorConstructor;
    TypeError: TypeErrorConstructor;
};
declare let FORBIDDEN_EXPRESSION_TOKENS: {
    new: boolean;
    this: boolean;
    with: boolean;
    delete: boolean;
    export: boolean;
    extends: boolean;
    super: boolean;
    class: boolean;
    abstract: boolean;
    interface: boolean;
    static: boolean;
    label: boolean;
    goto: boolean;
    private: boolean;
    import: boolean;
    public: boolean;
    do: boolean;
    native: boolean;
    package: boolean;
    transient: boolean;
    implements: boolean;
    protected: boolean;
    throws: boolean;
    synchronized: boolean;
    final: boolean;
    window: boolean;
    document: boolean;
    global: boolean;
    eval: boolean;
    uneval: boolean;
    Function: boolean;
    EvalError: boolean;
    require: boolean;
    module: boolean;
    exports: boolean;
    Module: boolean;
    arguments: boolean;
    callee: boolean;
    prototpye: boolean;
    __proto__: boolean;
    freeze: boolean;
    setPrototypeOf: boolean;
    constructor: boolean;
    defineProperties: boolean;
    defineProperty: boolean;
};
declare function ValueBuilder(component: any): void;
declare function _areSummoneesDifferent(previous: any, incoming: any): boolean;
