{"version":3,"sources":["../src/ProjectFolder.js"],"names":["getSafeProjectName","getSafeOrgName","ensureProject","ensureSpecificProject","buildProjectContent","semverBumpPackageJson","HaikuHomeDir","PLUMBING_DIR","join","__dirname","PLUMBING_NODE_MODULES","PLUMBING_PLAYER_INSTALL_PATH","PLAYER_PACKAGE_JSON","readJsonSync","throws","Error","DEFAULT_PROJECT_TYPE","HAIKU_CONFIG_FILE","WHITESPACE_REGEX","UNDERSCORE","FALLBACK_ORG_NAME","FALLBACK_AUTHOR_NAME","FALLBACK_SEMVER_VERSION","maybeProjectPath","maybeProjectName","replace","split","sep","maybeOrgName","projectOptions","cb","info","JSON","stringify","projectsHome","projectPath","organizationName","projectName","HOMEDIR_PROJECTS_PATH","mkdirp","err","safeProjectName","safeOrgName","projectType","skipContentCreation","npmActions","projectDependencies","install","link","_ignoredLegacyArg","finish","dir","args","i","arguments","length","pieces","concat","location","apply","looksLikeBrandNewProject","existsSync","outputFileSync","projectHaikuConfig","require","projectSemverVersion","version","projectNameSafe","name","projectNameSafeShort","slice","projectNameLowerCase","toLowerCase","reactProjectName","organizationNameLowerCase","authorName","haikuPlayerVersion","npmPackageName","humanTimestamp","format","autoGeneratedNotice","copyrightNotice","Date","getFullYear","packageJson","dependencies","upgradeDiff","diff","writeJsonSync","spaces","mkdirpSync","filesToMove","formerFilePath","nextFilePath","contentsToCopy","readFileSync","toString","removeSync","fileContents","filesToRemove","forEach","fileToRemove","astmod","ast","copySync","embedName","standaloneName","skipCDNBundles","series","embedSource","createBundle","browserifiedContents","finalContent","standaloneSource","results","exception","error","maybeVersionToBumpTo","jsonPath","pkg","newVersion","prevVersion","inc","newJson","writeFileSync"],"mappings":"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","file":"ProjectFolder.js","sourcesContent":["import path from 'path'\nimport fse from 'haiku-fs-extra'\nimport async from 'async'\nimport pascalcase from 'pascalcase'\nimport dedent from 'dedent'\nimport semver from 'semver'\nimport moment from 'moment'\nimport Browserify from './Browserify'\nimport npm from './npm'\nimport logger from 'haiku-serialization/src/utils/LoggerInstance'\nimport normalizeBytecodeFile from 'haiku-serialization/src/ast/normalizeBytecodeFile'\nimport FileModel from 'haiku-serialization/src/model/File'\nimport * as HaikuHomeDir from 'haiku-serialization/src/utils/HaikuHomeDir'\n\nconst PLUMBING_DIR = path.join(__dirname, '..')\nconst PLUMBING_NODE_MODULES = path.join(PLUMBING_DIR, 'node_modules')\nconst PLUMBING_PLAYER_INSTALL_PATH = path.join(PLUMBING_NODE_MODULES, '@haiku', 'player')\n// const PLUMBING_PKG = require('./../package.json')\n\nvar PLAYER_PACKAGE_JSON = fse.readJsonSync(path.join(PLUMBING_PLAYER_INSTALL_PATH, 'package.json'), { throws: false })\nif (!PLAYER_PACKAGE_JSON) {\n  throw new Error('Plumbing needs its dependencies to be installed')\n}\n\nconst DEFAULT_PROJECT_TYPE = 'haiku'\nconst HAIKU_CONFIG_FILE = 'haiku.js'\nconst WHITESPACE_REGEX = /\\s+/\nconst UNDERSCORE = '_'\nconst FALLBACK_ORG_NAME = 'Unknown'\nconst FALLBACK_AUTHOR_NAME = 'Haiku User'\nconst FALLBACK_SEMVER_VERSION = '0.0.0'\n\nexport function getSafeProjectName (maybeProjectPath, maybeProjectName) {\n  if (maybeProjectName) return maybeProjectName.replace(WHITESPACE_REGEX, UNDERSCORE)\n  if (maybeProjectPath) return pascalcase(maybeProjectPath.split(path.sep).join(UNDERSCORE))\n  throw new Error('Unable to infer a project name!')\n}\n\nexport function getSafeOrgName (maybeOrgName) {\n  if (!maybeOrgName || typeof maybeOrgName !== 'string') maybeOrgName = FALLBACK_ORG_NAME\n  return maybeOrgName.replace(WHITESPACE_REGEX, UNDERSCORE)\n}\n\n/**\n * @function ensureProject\n * @description Flexible way to ensure a project is ready. Use this if you aren't sure you have\n * all the params but want to get going, and/or if you want the system to infer where to put stuff.\n * NOTE: Any of the input object properties may be null/undefined!\n */\nexport function ensureProject (projectOptions, cb) {\n  logger.info('[project folder] ensure project options:', JSON.stringify(projectOptions))\n\n  let { projectsHome, projectPath, organizationName, projectName } = projectOptions\n\n  // If no specified projects home folder, use the default Haiku projects home folder\n  if (!projectsHome) {\n    projectsHome = HaikuHomeDir.HOMEDIR_PROJECTS_PATH\n  }\n\n  // Always make sure that that project home dir exists before continuing\n  logger.info('[project folder] ensuring projects home dir')\n  return fse.mkdirp(projectsHome, (err) => {\n    if (err) return cb(err)\n\n    const safeProjectName = getSafeProjectName(projectsHome, projectName)\n    const safeOrgName = getSafeOrgName(organizationName)\n\n    if (!projectPath) {\n      projectPath = path.join(projectsHome, safeOrgName, safeProjectName)\n    }\n\n    return ensureSpecificProject(projectPath, safeProjectName, 'haiku', projectOptions, cb)\n  })\n}\n\n/**\n * @function ensureSpecificProject\n * @description Less flexible than its sibling, this method assumes you have a specific folder in which\n * you want to boot up the project.\n */\nexport function ensureSpecificProject (projectPath, projectName, projectType = DEFAULT_PROJECT_TYPE, projectOptions, cb) {\n  logger.info('[project folder] ensuring specific project', projectPath)\n\n  if (!projectOptions) projectOptions = {}\n\n  return fse.mkdirp(projectPath, (err) => {\n    if (err) return cb(err)\n\n    // This check is needed since Creator may wish to specify that we do/don't automatically create content.\n    // This is very important because if we create content then pull from the remote, we'll get a weird initial state.\n    if (projectOptions.skipContentCreation) {\n      logger.info('[project folder] skipping content creation (I)')\n      return cb(null, projectPath)\n    }\n\n    return buildProjectContent(null, projectPath, projectName, projectType, projectOptions, (err) => {\n      if (err) return cb(err)\n      return cb(null, projectPath)\n    })\n  })\n}\n\nfunction npmActions (projectPath, projectDependencies, cb) {\n  return npm.install(projectPath, projectDependencies, (err) => {\n    if (err) return cb(err)\n    // We npm link *the project* so that local create-react-app can hmr from it\n    return npm.link(projectPath, [projectPath], cb)\n  })\n}\n\nexport function buildProjectContent (_ignoredLegacyArg, projectPath, projectName, projectType = DEFAULT_PROJECT_TYPE, projectOptions, finish) {\n  function dir () {\n    var args = []\n    for (var i = 0; i < arguments.length; i++) args[i] = arguments[i]\n    var pieces = [projectPath].concat(args)\n    var location = path.join.apply(path, pieces)\n    return location\n  }\n\n  let looksLikeBrandNewProject = false\n\n  try {\n    logger.info('[project folder] building project content', projectPath)\n\n    if (!fse.existsSync(dir(HAIKU_CONFIG_FILE))) {\n      logger.info('[project folder] creating haiku config')\n\n      looksLikeBrandNewProject = true\n\n      fse.outputFileSync(dir(HAIKU_CONFIG_FILE), dedent`\n        module.exports = {\n          type: '${projectType}',\n          name: '${getSafeProjectName(projectPath, projectName)}'\n        }\n      `)\n    }\n\n    // Reload from the user's config in case they overrode ours\n    const projectHaikuConfig = require(dir(HAIKU_CONFIG_FILE))\n\n    const projectSemverVersion = projectHaikuConfig.version || FALLBACK_SEMVER_VERSION\n    const projectNameSafe = getSafeProjectName(projectPath, projectHaikuConfig.name)\n    const projectNameSafeShort = projectNameSafe.slice(0, 20)\n    const projectNameLowerCase = projectNameSafe.toLowerCase()\n    const reactProjectName = `React_${projectNameSafe}`\n    const organizationName = projectOptions.organizationName || FALLBACK_ORG_NAME\n    const organizationNameLowerCase = organizationName.toLowerCase()\n    const authorName = projectOptions.authorName || FALLBACK_AUTHOR_NAME\n\n    // const nodeVersion = PLUMBING_PKG.engines.node\n    // const npmVersion = PLUMBING_PKG.engines.npm\n    // const electronVersion = PLUMBING_PKG.engines.electron\n    const haikuPlayerVersion = PLAYER_PACKAGE_JSON.version // This json object should be loaded at the top\n    const npmPackageName = `@haiku/${organizationNameLowerCase}-${projectNameLowerCase}`\n    const humanTimestamp = moment().format('YYYYMMDDHHmmss')\n    const autoGeneratedNotice = `This file was autogenerated by Haiku at ${humanTimestamp}.`\n    const copyrightNotice = `Copyright (c) ${(new Date()).getFullYear()} ${organizationName}. All rights reserved.`\n    // const embedPlayerJavascriptPath = `https://code.haiku.ai/scripts/player/HaikuPlayer.${haikuPlayerVersion}.js`\n    // const embedPlayerJavascriptMinPath = `https://code.haiku.ai/scripts/player/HaikuPlayer.${haikuPlayerVersion}.min.js`\n\n    if (!fse.existsSync(dir('package.json'))) {\n      fse.outputFileSync(dir('package.json'), dedent`\n        {\n          \"name\": \"${npmPackageName}\",\n          \"version\": \"${projectSemverVersion}\",\n          \"haiku\": {\n            \"organization\": \"${organizationName}\",\n            \"project\": \"${projectNameSafe}\"\n          },\n          \"authors\": [\n            \"${authorName}\",\n            \"Haiku <contact@haiku.ai>\"\n          ],\n          \"license\": \"LicenseRef-LICENSE\",\n          \"main\": \"index.js\",\n          \"dependencies\": {\n            \"@haiku/player\": \"${haikuPlayerVersion}\"\n          }\n        }\n      `)\n    }\n\n    // Fix up the contents of the package.json if they happen to be wrong, e.g., organization name not set correctly\n    let packageJson = fse.readJsonSync(dir('package.json'), { throws: false })\n    if (!packageJson) return finish(new Error('package.json was found to be empty/unreadable'))\n\n    // Note that we _don't_  want to set back to 'unknown' if it's already set\n    if (organizationName && organizationName !== FALLBACK_ORG_NAME) {\n      if (packageJson.name !== npmPackageName) packageJson.name = npmPackageName\n      if (packageJson.dependencies) packageJson.dependencies = {}\n      if (!packageJson.dependencies['@haiku/player']) {\n        packageJson.dependencies['@haiku/player'] = haikuPlayerVersion\n      }\n\n      logger.info('[project folder] @haiku/player version is', packageJson.dependencies['@haiku/player'])\n\n      // If our player version is only a patch difference from theirs, go ahead and upgrade their player\n      let upgradeDiff = semver.diff(packageJson.dependencies['@haiku/player'], haikuPlayerVersion)\n      if (upgradeDiff === 'patch') {\n        logger.info('[project folder] upgraded @haiku/player to', haikuPlayerVersion)\n        packageJson.dependencies['@haiku/player'] = haikuPlayerVersion\n      }\n    }\n\n    // Write the file assuming we may have made a change in any of the conditions above\n    fse.writeJsonSync(dir('package.json'), packageJson, { spaces: 2 })\n\n    // Do npm stuff here since the following steps may require the installation to be complete first\n    let projectDependencies = require(dir('package.json')).dependencies\n    return npmActions(projectPath, projectDependencies, (err) => {\n      if (err) return finish(err)\n\n      // This option is used when we initially set up a project before we've attempted to clone content that\n      // may or may not exist on the remote. Since this case involves copying into a temp folder and then back\n      // on top of the cloned content, we don't want to create anything that might inadvertently overwrite stuff.\n      if (projectOptions.skipContentCreation) {\n        logger.info('[project folder] skipping content creation (II)')\n        return finish()\n      }\n\n      logger.info('[project folder] creating folders')\n\n      fse.mkdirpSync(dir('.haiku'))\n      fse.mkdirpSync(dir('designs'))\n      fse.mkdirpSync(dir('code/main'))\n      fse.mkdirpSync(dir('public'))\n\n      logger.info('[project folder] moving/updating legacy files')\n\n      // Do a bunch of fix-ups that modify the folder content from legacy naming and folder structure.\n      // We need to change this subroutine any time we make a change to the project content structure\n      let filesToMove = {\n        // Meta files\n        'readme.md': 'README.md', // LEGACY: I think we used to name it lowercase, but we want upper\n        'license.txt': 'LICENSE.txt', // LEGACY: I think we used to name it lowercase, but we want upper\n        // Core code files\n        'bytecode.js': 'code/main/code.js',\n        'interpreter.js': 'code/main/dom.js',\n        'embed.js': 'code/main/dom-embed.js',\n        'react-dom.js': 'code/main/react-dom.js'\n\n        // --\n        // TODO: Switch the bundle code files to these paths, once we're ready to make the equivalent\n        // switch inside sumi-e, inkstone, share-page, and wherever else.\n        // ALSO SEE BELOW, where paths need to be changed as well\n        // 'index.embed.js': 'public/dom-embed.bundle.js',\n        // 'index.standalone.js': 'public/dom-standalone.bundle.js'\n        // --\n      }\n      for (let formerFilePath in filesToMove) {\n        let nextFilePath = filesToMove[formerFilePath]\n        if (fse.existsSync(dir(formerFilePath))) {\n          // I guess there is no 'moveSync', and 'copySync' acts weird, so here it is imperatively:\n          let contentsToCopy = fse.readFileSync(dir(formerFilePath)).toString()\n          fse.outputFileSync(dir(nextFilePath), contentsToCopy)\n          fse.removeSync(dir(formerFilePath))\n        }\n        // Now fix any legacy content that may be present inside of the updated file, e.g. references\n        if (fse.existsSync(dir(nextFilePath))) {\n          let fileContents = fse.readFileSync(dir(nextFilePath)).toString()\n          fileContents.split('bytecode.js').join('code.js') // Respective to the code/main dir\n          fileContents.split('interpreter.js').join('dom.js') // Respective to the code/main dir\n          fse.outputFileSync(dir(nextFilePath), fileContents)\n        }\n      }\n\n      logger.info('[project folder] removing unneeded files')\n\n      let filesToRemove = [\n        'index.embed.html',\n        'index.standalone.html'\n      ]\n      filesToRemove.forEach((fileToRemove) => {\n        fse.removeSync(dir(fileToRemove))\n      })\n\n      logger.info('[project folder] creating files')\n\n      // Only write these files if they don't exist yet; don't overwrite the user's own content\n      if (!fse.existsSync(dir('code/main/code.js'))) {\n        logger.info('[project folder] created main code file')\n\n        fse.outputFileSync(dir('code/main/code.js'), dedent`\n          var Haiku = require('@haiku/player')\n          module.exports = {\n            metadata: {},\n            options: {},\n            states: {},\n            eventHandlers: {},\n            timelines: {\n              Default: {}\n            },\n            template: {\n              elementName: 'div',\n              attributes: {\n                'haiku-title': 'HaikuComponent'\n              },\n              children: []\n            }\n          }\n        `)\n      } else {\n        // If the file already exists, we can run any migration steps we might want\n        FileModel.astmod(dir('code/main/code.js'), (ast) => {\n          normalizeBytecodeFile(ast)\n        })\n      }\n\n      // Other user data may have been written these, so don't overwrite if they're already present\n      if (!fse.existsSync(dir('.haiku/comments.json'))) {\n        fse.outputFileSync(dir('.haiku/comments.json'), dedent`\n          []\n        `)\n      }\n\n      // If it isn't already a part of the project, add the 'blank' sketch file to users' projects\n      if (looksLikeBrandNewProject) {\n        if (!fse.existsSync(dir(`designs/${projectNameSafeShort}.sketch`))) {\n          fse.copySync(path.join(PLUMBING_DIR, 'bins', 'sketch-42.sketch'), dir(`designs/${projectNameSafeShort}.sketch`))\n        }\n      }\n\n      fse.outputFileSync(dir('README.md'), dedent`\n        # ${projectNameSafe}\n\n        This project was created with [Haiku](https://haiku.ai).\n\n        ## Install\n\n        \\`\\`\\`\n        $ haiku install ${projectNameSafe}\n        \\`\\`\\`\n\n        ## Usage\n\n        \\`\\`\\`\n        var ${projectNameSafe} = require('${npmPackageName}')\n        \\`\\`\\`\n\n        ## Copyright\n\n        ${copyrightNotice}\n      `)\n\n      fse.outputFileSync(dir('LICENSE.txt'), dedent`\n        ${autoGeneratedNotice}\n        ${copyrightNotice}\n      `)\n\n      let embedName = `HaikuComponentEmbed_${organizationName}_${projectNameSafe}`\n      let standaloneName = `HaikuComponent_${organizationName}_${projectNameSafe}`\n\n      // But a bunch of ancillary files we take full control of and overwrite despite what the user did\n      fse.outputFileSync(dir('index.js'), dedent`\n        /** ${autoGeneratedNotice} */\n        // By default, a DOM module is exported; see code/main/* for other options\n        module.exports = require('./code/main/dom')\n      `)\n      fse.outputFileSync(dir('react.js'), dedent`\n        /** ${autoGeneratedNotice} */\n        // By default, a react-dom module is exported; see code/main/* for other options\n        module.exports = require('./code/main/react-dom')\n      `)\n      fse.outputFileSync(dir('react-bare.js'), dedent`\n        /** ${autoGeneratedNotice} */\n        // This only exports a React module into which a Haiku Player must be passed\n        var React = require('react') // Installed as a peer dependency of '@haiku/player'\n        var ReactDOM = require('react-dom') // Installed as a peer dependency of '@haiku/player'\n        var HaikuReactAdapter = require('@haiku/player/dom/react')\n        var ${reactProjectName}_Bare = HaikuReactAdapter(null, require('./code/main/code'))\n        if (${reactProjectName}_Bare.default) ${reactProjectName}_Bare = ${reactProjectName}_Bare.default\n        module.exports = ${reactProjectName}_Bare\n      `)\n\n      fse.outputFileSync(dir('code/main/dom.js'), dedent`\n        /** ${autoGeneratedNotice} */\n        var HaikuDOMAdapter = require('@haiku/player/dom')\n        module.exports = HaikuDOMAdapter(require('./code'))\n      `)\n      fse.outputFileSync(dir('code/main/dom-embed.js'), dedent`\n        /** ${autoGeneratedNotice} */\n        var code = require('./code')\n        var adapter = window.HaikuPlayer && window.HaikuPlayer['${haikuPlayerVersion}']\n        if (adapter) {\n          module.exports = adapter(code)\n        } else  {\n          function safety () {\n            console.error(\n              '[haiku player] player version ${haikuPlayerVersion} seems to be missing. ' +\n              'index.embed.js expects it at window.HaikuPlayer[\"${haikuPlayerVersion}\"], but we cannot find it. ' +\n              'you may need to add a <script src=\"path/to/HaikuPlayer.js\"></script> to fix this. ' +\n              'if you really need to load the player after this script, you could try: ' +\n              'myHaikuPlayer(${embedName})(document.getElementById(\"myMountElement\"))'\n            )\n            return code\n          }\n          for (var key in code) {\n            safety[key] = code[key]\n          }\n          module.exports = safety\n        }\n      `)\n      fse.outputFileSync(dir('code/main/dom-standalone.js'), dedent`\n        /** ${autoGeneratedNotice} */\n        module.exports = require('./dom')\n      `)\n      fse.outputFileSync(dir('code/main/react-dom.js'), dedent`\n        /** ${autoGeneratedNotice} */\n        var React = require('react') // Installed as a peer dependency of '@haiku/player'\n        var ReactDOM = require('react-dom') // Installed as a peer dependency of '@haiku/player'\n        var HaikuReactAdapter = require('@haiku/player/dom/react')\n        var ${reactProjectName} = HaikuReactAdapter(require('./dom'))\n        if (${reactProjectName}.default) ${reactProjectName} = ${reactProjectName}.default\n        module.exports = ${reactProjectName}\n      `)\n\n      fse.outputFileSync(dir('preview.html'), dedent`\n        <!DOCTYPE html>\n        <!-- ${autoGeneratedNotice} -->\n        <html>\n        <head>\n          <meta charset=\"utf-8\">\n          <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n          <title>${projectNameSafe} | Preview | Haiku</title>\n          <style>\n            .container { margin: 0 auto; width: 100%; }\n            #mount { width: 80%; margin: 0 auto; }\n          </style>\n        </head>\n        <body>\n          <div class=\"container\">\n            <div id=\"mount\"></div>\n          </div>\n          <script src=\"./index.standalone.js\"></script>\n          <script>\n            ${standaloneName}(document.getElementById('mount'), {\n              sizing: 'contain',\n              loop: true\n            })\n          </script>\n        </body>\n        </html>\n      `)\n\n      // Should we try to merge these if the user made any changes?\n      fse.outputFileSync(dir('.gitignore'), dedent`\n        # ${autoGeneratedNotice}\n        .DS_Store\n        *.log\n        *.*.log\n        node_modules\n        bower_components\n        jspm_modules\n        coverage\n        build\n        dist\n        .env\n      `)\n      fse.outputFileSync(dir('.npmignore'), dedent`\n        # ${autoGeneratedNotice}\n        .DS_Store\n        .git\n        .svn\n        *.log\n        *.*.log\n        *.ai\n        *.sketch\n        *.svg\n        .env\n        .haiku\n      `)\n      fse.outputFileSync(dir('.yarnignore'), dedent`\n        # ${autoGeneratedNotice}\n        .DS_Store\n        .git\n        .svn\n        *.log\n        *.*.log\n        *.ai\n        *.sketch\n        *.svg\n        .env\n        .haiku\n      `)\n      fse.outputFileSync(dir('.npmrc'), dedent`\n        # ${autoGeneratedNotice}\n        registry=https://registry.npmjs.org/\n        @haiku:registry=https://reservoir.haiku.ai:8910/\n      `)\n      fse.outputFileSync(dir('.yarnrc'), dedent`\n        # ${autoGeneratedNotice}\n        registry \"https://registry.npmjs.org/\"\n        \"@haiku:registry\" \"https://reservoir.haiku.ai:8910/\"\n      `)\n\n      // Let the user skip this heavy step optionally, e.g. when just initializing the project the first time\n      if (projectOptions.skipCDNBundles) {\n        logger.info('[project folder] skipping cdn bundles')\n        return finish()\n      }\n\n      logger.info('[project folder] creating cdn bundles')\n      return async.series([\n        function (cb) {\n          let embedSource = fse.readFileSync(dir('code/main/dom-embed.js')).toString()\n          logger.info('[project folder] browserifying code/main/dom-embed.js')\n          return Browserify.createBundle(dir('code/main'), embedSource, embedName, {}, (err, browserifiedContents) => {\n            if (err) return cb(err)\n            logger.info('[project folder] browserify succeeded for', embedName)\n            let finalContent = `/** ${autoGeneratedNotice}\\n${copyrightNotice}\\n*/\\n${browserifiedContents}`\n            fse.outputFileSync(dir('index.embed.js'), finalContent)\n            return cb()\n          })\n        },\n        function (cb) {\n          let standaloneSource = fse.readFileSync(dir('code/main/dom-standalone.js')).toString()\n          logger.info('[project folder] browserifying code/main/dom-standalone.js')\n          return Browserify.createBundle(dir('code/main'), standaloneSource, standaloneName, {}, (err, browserifiedContents) => {\n            if (err) return cb(err)\n            logger.info('[project folder] browserify succeeded for', standaloneName)\n            let finalContent = `/** ${autoGeneratedNotice}\\n${copyrightNotice}\\n*/\\n${browserifiedContents}`\n            fse.outputFileSync(dir('index.standalone.js'), finalContent)\n            return cb()\n          })\n        }\n      ], (err, results) => {\n        if (err) return finish(err)\n        return finish(null, results[results.length - 1])\n      })\n    })\n  } catch (exception) {\n    logger.error('[project folder] ' + exception)\n    return finish(exception)\n  }\n}\n\nexport function semverBumpPackageJson (projectPath, maybeVersionToBumpTo, cb) {\n  try {\n    var jsonPath = path.join(projectPath, 'package.json')\n\n    logger.info(`[project folder] semver bump: checking ${jsonPath}`)\n\n    const pkg = fse.readJsonSync(jsonPath)\n\n    let newVersion\n\n    // Allow a version to be specified explicitly. This turns out to be useful in plumbing/master\n    // where we might find a previously-used tag and need to explicitly bump from it, instead of using\n    // what might be defined in the package.json.\n    if (maybeVersionToBumpTo) {\n      logger.info(`[project folder] semver bump: got explicit version ${maybeVersionToBumpTo}`)\n      newVersion = maybeVersionToBumpTo\n    } else {\n      const prevVersion = pkg.version || FALLBACK_SEMVER_VERSION\n      logger.info(`[project folder] semver bump: found previous version ${prevVersion}`)\n      newVersion = semver.inc(prevVersion, 'patch')\n    }\n\n    logger.info(`[project folder] semver bump: assigning version ${newVersion}`)\n\n    pkg.version = newVersion\n    const newJson = JSON.stringify(pkg, null, 2) + '\\n'\n    fse.writeFileSync(jsonPath, newJson)\n\n    return cb(null, newVersion)\n  } catch (exception) {\n    return cb(exception)\n  }\n}\n"]}