{"version":3,"sources":["../../src/publish-hooks/saveExport.js"],"names":["request","activeComponent","cb","bytecodeSnapshot","fetchActiveBytecodeFile","getReifiedBytecode","reloadBytecodeFromDisk","err","then","contents","writeFile","filename","error","catch"],"mappings":";;;;;;AAAA;;;;AACA;;;;kBAEe,UAACA,OAAD,EAAUC,eAAV,EAA2BC,EAA3B,EAAkC;AAC/C,MAAMC,mBAAmBF,gBAAgBG,uBAAhB,GAA0CC,kBAA1C,EAAzB;AACA;AACAJ,kBAAgBK,sBAAhB,CAAuC,UAACC,GAAD,EAAS;AAC9C,QAAIA,GAAJ,EAAS;AACPL,SAAGK,GAAH;AACA;AACD;;AAED,8CAA0BP,OAA1B,EAAmCG,gBAAnC,EACGK,IADH,CACQ,UAACC,QAAD,EAAc;AAClB,6BAAIC,SAAJ,CAAcV,QAAQW,QAAtB,EAAgCF,QAAhC,EAA0C,UAACG,KAAD;AAAA,eAAWV,GAAGU,KAAH,CAAX;AAAA,OAA1C;AACD,KAHH,EAIGC,KAJH,CAIS,UAACD,KAAD;AAAA,aAAWV,GAAGU,KAAH,CAAX;AAAA,KAJT;AAKD,GAXD;AAYD,C","file":"saveExport.js","sourcesContent":["import fse from 'haiku-fs-extra'\nimport { handleExporterSaveRequest } from 'haiku-formats/lib/exporters'\n\nexport default (request, activeComponent, cb) => {\n  const bytecodeSnapshot = activeComponent.fetchActiveBytecodeFile().getReifiedBytecode()\n  // Re-mount the active component so mutations to the bytecode snapshot don't trickle into the project.\n  activeComponent.reloadBytecodeFromDisk((err) => {\n    if (err) {\n      cb(err)\n      return\n    }\n\n    handleExporterSaveRequest(request, bytecodeSnapshot)\n      .then((contents) => {\n        fse.writeFile(request.filename, contents, (error) => cb(error))\n      })\n      .catch((error) => cb(error))\n  })\n}\n"]}