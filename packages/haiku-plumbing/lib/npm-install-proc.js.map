{"version":3,"sources":["../src/npm-install-proc.js"],"names":["npm","require","fse","path","logger","argv","process","slice","shift","folder","deps","info","env","HAIKU_SKIP_NPM_INSTALL","exit","depNeedsInstall","name","version","pkgpath","join","existsSync","pkg","readJsonSync","throws","_doesAnythingNeedInstall","i","length","dep","parts","split","load","loaded","loglevel","silent","quiet","progress","err","commands","install"],"mappings":"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","file":"npm-install-proc.js","sourcesContent":["var npm = require('npm')\nvar fse = require('haiku-fs-extra')\nvar path = require('path')\nvar logger = require('haiku-serialization/src/utils/LoggerInstance')\n\n// This is in a subprocess because unless we do this, we get \"#2 Argument was an object\"\n// errors which there appears to be no other way to work around\n\nvar argv = process.argv.slice(0)\n\nargv.shift() // node.js\nargv.shift() // this file\n\nvar folder = argv.shift()\nvar deps = argv\n\nlogger.info('[master] npm install subprocess called in', folder, 'for deps', deps)\n\nif (process.env.HAIKU_SKIP_NPM_INSTALL === '1') {\n  logger.info('[master] env says to skip npm install; skipping')\n  process.exit()\n}\n\nfunction depNeedsInstall (name, version) {\n  var pkgpath = path.join(folder, 'node_modules', name, 'package.json')\n\n  logger.info('[master] checking if npm dependency ' + name + '@' + version + ' needs install')\n  logger.info('[master] using dependency path', pkgpath)\n\n  if (!fse.existsSync(pkgpath)) {\n    logger.info('[master] no file found at ' + pkgpath)\n    return true // If no package, we must install\n  }\n\n  var pkg = fse.readJsonSync(pkgpath, { throws: false })\n  if (!pkg) {\n    logger.info('[master] bad json in ' + pkgpath)\n    return true\n  }\n\n  if (pkg.version !== version) {\n    logger.info('[master] version mismatch in ' + pkgpath + ' (' + version + ' vs ' + pkg.version + ')')\n    return true\n  }\n\n  return false\n}\n\nvar _doesAnythingNeedInstall = false\nfor (var i = 0; i < deps.length; i++) {\n  // We already know we need to install; no point continuing the loop\n  if (_doesAnythingNeedInstall) {\n    continue\n  }\n\n  var dep = deps[i]\n  var parts = dep.split(/(?!^)@/i) // handle things like \"foo@1.1.1\" and \"@haiku/foo@1.1.1\"\n  var name = parts[0]\n  var version = parts[1]\n\n  if (depNeedsInstall(name, version)) {\n    logger.info('[master] npm dependency ' + dep + ' needs install')\n    _doesAnythingNeedInstall = true\n  }\n}\n\nif (!_doesAnythingNeedInstall) {\n  logger.info('[master] npm install not needed; skipping')\n  process.exit()\n}\n\nnpm.load({ loaded: false, loglevel: 'silent', silent: true, quiet: true, progress: false }, function (err) {\n  if (err) throw err\n  return npm.commands.install(folder, deps, function (err) {\n    if (err) throw err\n    process.exit()\n  })\n})\n"]}