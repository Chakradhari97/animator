{"version":3,"sources":["../src/Master.js"],"names":["Git","Asset","Sketch","ProjectFolder","UNLOGGABLE_METHODS","METHODS_TO_RUN_IMMEDIATELY","FORBIDDEN_METHODS","logMethodMessage","handleMethodMessage","callMethodWithMessage","handleBroadcastMessage","METHOD_QUEUE_INTERVAL","SAVE_AWAIT_TIME","WATCHABLE_EXTNAMES","DESIGN_EXTNAMES","UNWATCHABLE_RELPATHS","UNWATCHABLE_BASENAMES","DEFAULT_BRANCH_NAME","_isFileSignificant","relpath","basename","extname","_excludeIfNotJs","Master","folder","Error","proc","socket","on","info","teardown","emit","err","message","cb","_config","_git","tag","handleSemverTagChange","_mod","_watcher","_isReadyToReceiveMethods","_methodQueue","_methodQueueInterval","setInterval","methods","splice","forEach","clearInterval","_knownDesigns","_designsPendingMerge","_component","_isSaving","debouncedEmitAssetsChanged","emitAssetsChanged","bind","trailing","debouncedEmitDesignNeedsMergeRequest","emitDesignNeedsMergeRequest","_modificationsInterval","_envoyClient","closeConnection","stop","method","params","push","name","handleReloadComplete","setTimeout","waitForSaveToComplete","assets","send","type","designs","Object","keys","length","request","getAssetDirectoryInfo","isOpen","batchDesignMergeRequest","abspath","relative","dtModified","Date","now","emitDesignChange","commitFileIfChanged","sketchtoolPipeline","FileModel","ingestOne","file","fetchActiveBytecodeFile","get","set","reinitializeSubstruct","handleModuleChange","expelOne","writeMetadata","version","isReady","isSaving","websocketReadyState","getReadyState","isCommitting","hasAnyPendingCommits","gitUndoables","getGitUndoablesUptoBase","gitRedoables","getGitRedoablesUptoBase","status","statusErr","statusesDict","done","hardReset","removeUntrackedFiles","projectName","haikuUsername","haikuPassword","fetchOptions","fetchFolderState","getCurrentShareInfo","undoOptions","undo","redoOptions","redo","entries","entry","path","normalize","getAssets","assetsToDirectoryStructure","getProjectNameVariations","primaryAssetPath","asset","isPrimaryDesign","loadAssets","join","destination","copy","copyErr","remove","removeErr","setTimelineName","apply","setTimelineTime","readMetadata","concat","readAllStateValues","readAllEventHandlers","previewOptions","action","bytecodeAction","projectOptions","restart","branchName","series","initializeProject","buildProjectContent","organizationName","skipContentCreation","skipCDNBundles","commitProjectIfChanged","setUndoBaselineIfHeadCommitExists","results","startProject","loggingPrefix","response","load","alias","userconfig","websocket","platform","envoy","HAIKU","host","process","env","ENVOY_HOST","port","ENVOY_PORT","doShallowWorkOnly","skipDiffLogging","mountApplication","_componentInstance","_context","clock","GLOBAL_ANIMATION_HARNESS","cancel","ingestFromFolder","exclude","performComponentWork","bytecode","mana","wrapup","watch","handleFileChange","handleFileAdd","handleFileRemove","saveOptions","finish","out","getExistingShareDataIfSaveIsUnnecessary","existingShareData","getFolderState","semverVersion","bytecodeMetadata","uuid","player","getHaikuPlayerLibVersion","organization","project","branch","authorName","saveProject"],"mappings":"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","file":"Master.js","sourcesContent":["import { EventEmitter } from 'events'\nimport fse from 'haiku-fs-extra'\nimport path from 'path'\nimport async from 'async'\nimport { debounce } from 'lodash'\nimport walkFiles from 'haiku-serialization/src/utils/walkFiles'\nimport ActiveComponent from 'haiku-serialization/src/model/ActiveComponent'\nimport logger from 'haiku-serialization/src/utils/LoggerInstance'\nimport ProcessBase from './ProcessBase'\nimport * as Git from './Git'\nimport ProjectConfiguration from './ProjectConfiguration'\nimport * as Asset from './Asset'\nimport Watcher from './Watcher'\nimport * as Sketch from './Sketch'\nimport * as ProjectFolder from './ProjectFolder'\nimport MasterGitProject from './MasterGitProject'\nimport MasterModuleProject from './MasterModuleProject'\n\nconst UNLOGGABLE_METHODS = {\n  'masterHeartbeat': true\n}\n\nconst METHODS_TO_RUN_IMMEDIATELY = {\n  'startProject': true,\n  'restartProject': true,\n  'initializeFolder': true,\n  'masterHeartbeat': true\n}\n\nconst FORBIDDEN_METHODS = {\n  logMethodMessage: true,\n  handleMethodMessage: true,\n  callMethodWithMessage: true,\n  handleBroadcastMessage: true\n}\n\nconst METHOD_QUEUE_INTERVAL = 64\nconst SAVE_AWAIT_TIME = 64 * 2\n\nconst WATCHABLE_EXTNAMES = {\n  '.js': true,\n  '.svg': true,\n  '.sketch': true\n}\n\nconst DESIGN_EXTNAMES = {\n  '.sketch': true,\n  '.svg': true\n}\n\nconst UNWATCHABLE_RELPATHS = {\n  'index.js': true,\n  'haiku.js': true,\n  'react-bare.js': true,\n  'react.js': true\n}\n\nconst UNWATCHABLE_BASENAMES = {\n  'index.standalone.js': true,\n  'index.embed.js': true,\n  'dom-embed.js': true,\n  'dom-standalone.js': true,\n  'react-dom.js': true,\n  '~.sketch': true // Ephemeral file generated by sketch during file writes\n}\n\nconst DEFAULT_BRANCH_NAME = 'master'\n\nfunction _isFileSignificant (relpath) {\n  if (UNWATCHABLE_RELPATHS[relpath]) return false\n  if (UNWATCHABLE_BASENAMES[path.basename(relpath)]) return false\n  if (!WATCHABLE_EXTNAMES[path.extname(relpath)]) return false\n  return true\n}\n\nfunction _excludeIfNotJs (relpath) {\n  if (path.extname(relpath) !== '.js') return true\n  return !_isFileSignificant(relpath)\n}\n\nexport default class Master extends EventEmitter {\n  constructor (folder) {\n    super()\n\n    this.folder = folder\n\n    if (!this.folder) {\n      throw new Error('[master] Master cannot launch without a folder defined')\n    }\n\n    // IPC hook to communicate with plumbing\n    this.proc = new ProcessBase('master') // 'master' is not a branch name in this context\n\n    this.proc.socket.on('close', () => {\n      logger.info('[master] !!! socket closed')\n      this.teardown()\n      this.emit('host-disconnected')\n    })\n\n    this.proc.socket.on('error', (err) => {\n      logger.info('[master] !!! socket error', err)\n    })\n\n    this.proc.on('request', (message, cb) => {\n      this.handleMethodMessage(message, cb)\n    })\n\n    this.proc.socket.on('broadcast', (message) => {\n      this.handleBroadcastMessage(message)\n    })\n\n    // Encapsulation of the user's configuration content (haiku.js) (not loaded yet)\n    this._config = new ProjectConfiguration()\n\n    // Encapsulation of project actions that relate to git or cloud saving in some way\n    this._git = new MasterGitProject(this.folder)\n\n    this._git.on('semver-bumped', (tag, cb) => {\n      this.handleSemverTagChange(tag, cb)\n    })\n\n    // Encapsulation of project actions that concern the live module in other views\n    this._mod = new MasterModuleProject(this.folder, this.proc)\n\n    this._mod.on('triggering-reload', () => {\n      logger.info('[master] module replacment triggering')\n    })\n\n    this._mod.on('reload-complete', () => {\n      logger.info('[master] module replacment finished')\n    })\n\n    // To store a Watcher instance which will watch for changes on the file system\n    this._watcher = null\n\n    // Flag denotes whether we've fully initialized and are able to handle websocket methods\n    this._isReadyToReceiveMethods = false\n\n    // Queue of accumulated incoming methods we've received that we need to defer until ready\n    this._methodQueue = []\n\n    // Worker that handles processing any methods that have accumulated in our queue\n    this._methodQueueInterval = setInterval(() => {\n      if (this._isReadyToReceiveMethods) {\n        const methods = this._methodQueue.splice(0)\n        methods.forEach(({ message, cb }) => this.callMethodWithMessage(message, cb))\n        clearInterval(this._methodQueueInterval)\n      }\n    }, METHOD_QUEUE_INTERVAL)\n\n    // Dictionary of all designs in the project, mapping relpath to metadata object\n    this._knownDesigns = {}\n\n    // Designs that have changed and need merge, batched for\n    this._designsPendingMerge = {}\n\n    // Store an ActiveComponent instance for method delegation\n    this._component = null\n\n    // Saving takes a while and we use this flag to avoid overlapping saves\n    this._isSaving = false\n\n    // We end up oversaturating the sockets unless we debounce this\n    this.debouncedEmitAssetsChanged = debounce(this.emitAssetsChanged.bind(this), 500, { trailing: true })\n    this.debouncedEmitDesignNeedsMergeRequest = debounce(this.emitDesignNeedsMergeRequest.bind(this), 500, { trailing: true })\n  }\n\n  teardown () {\n    clearInterval(this._methodQueueInterval)\n    clearInterval(this._mod._modificationsInterval)\n    if (this._git) this._git.teardown()\n    if (this._component) this._component._envoyClient.closeConnection()\n    if (this._watcher) this._watcher.stop()\n  }\n\n  logMethodMessage ({ method, params }) {\n    if (!UNLOGGABLE_METHODS[method]) {\n      logger.info('[master]', 'calling', method, params)\n    }\n  }\n\n  handleMethodMessage (message, cb) {\n    const { method, params } = message\n    // We stop using the queue once we're up and running; no point keeping the queue\n    if (METHODS_TO_RUN_IMMEDIATELY[method] || this._isReadyToReceiveMethods) {\n      return this.callMethodWithMessage({ method, params }, cb)\n    } else {\n      return this._methodQueue.push({ message, cb })\n    }\n  }\n\n  callMethodWithMessage (message, cb) {\n    const { method, params } = message\n    if (typeof this[method] === 'function' && !FORBIDDEN_METHODS[method]) {\n      this.logMethodMessage({ method, params })\n      return this[method]({ method, params }, cb)\n    } else {\n      return cb(new Error(`[master] No such method ${method}`))\n    }\n  }\n\n  handleBroadcastMessage (message) {\n    switch (message.name) {\n      case 'component:reload:complete':\n        this._mod.handleReloadComplete(message)\n        break\n    }\n  }\n\n  waitForSaveToComplete (cb) {\n    if (this._isSaving) {\n      return setTimeout(() => {\n        return this.waitForSaveToComplete(cb)\n      }, SAVE_AWAIT_TIME)\n    } else {\n      return cb()\n    }\n  }\n\n  emitAssetsChanged (assets) {\n    return this.proc.socket.send({\n      type: 'broadcast',\n      name: 'assets-changed',\n      folder: this.folder,\n      assets\n    })\n  }\n\n  emitDesignNeedsMergeRequest () {\n    let designs = this._designsPendingMerge\n    this._designsPendingMerge = {}\n    if (Object.keys(designs).length > 0) {\n      logger.info('[master] merge designs requested')\n      this.proc.socket.request({ type: 'action', method: 'mergeDesigns', params: [this.folder, 'Default', 0, designs] }, () => {\n        // TODO: Call rest after design merge finishes?\n      })\n    }\n  }\n\n  batchDesignMergeRequest (relpath) {\n    this._designsPendingMerge[relpath] = {}\n    return this\n  }\n\n  emitDesignChange (relpath) {\n    const assets = this.getAssetDirectoryInfo()\n    const extname = path.extname(relpath)\n    logger.info('[master] asset changed', relpath)\n    this.emit('design-change', relpath, assets)\n    if (this.proc.isOpen()) {\n      this.debouncedEmitAssetsChanged(assets)\n      if (extname === '.svg') {\n        this.batchDesignMergeRequest(relpath)\n        this.debouncedEmitDesignNeedsMergeRequest()\n      }\n    }\n  }\n\n  // /**\n  //  * watchers/handlers\n  //  * =================\n  //  */\n\n  handleFileChange (abspath) {\n    const relpath = path.relative(this.folder, abspath)\n    const extname = path.extname(relpath)\n\n    if (extname === '.sketch' || extname === '.svg') {\n      this._knownDesigns[relpath] = { relpath, abspath, dtModified: Date.now() }\n      this.emitDesignChange(relpath)\n    }\n\n    return this.waitForSaveToComplete(() => {\n      return this._git.commitFileIfChanged(relpath, `Changed ${relpath}`, () => {\n        if (!_isFileSignificant(relpath)) {\n          return void (0)\n        }\n\n        if (extname === '.sketch') {\n          logger.info('[master] sketchtool pipeline running; please wait')\n          Sketch.sketchtoolPipeline(abspath)\n          logger.info('[master] sketchtool done')\n          return void (0)\n        }\n\n        if (extname === '.js') {\n          return this._component.FileModel.ingestOne(this.folder, relpath, (err, file) => {\n            if (err) return logger.info(err)\n            logger.info('[master] file ingested:', abspath)\n            if (relpath === this._component.fetchActiveBytecodeFile().get('relpath')) {\n              file.set('substructInitialized', file.reinitializeSubstruct(this._config.get('config'), 'Master.handleFileChange'))\n              if (file.get('previous') !== file.get('contents')) {\n                this._mod.handleModuleChange(file)\n              }\n            }\n          })\n        }\n      })\n    })\n  }\n\n  handleFileAdd (abspath) {\n    const relpath = path.relative(this.folder, abspath)\n    const extname = path.extname(relpath)\n\n    if (extname === '.sketch' || extname === '.svg') {\n      this._knownDesigns[relpath] = { relpath, abspath, dtModified: Date.now() }\n      this.emitDesignChange(relpath)\n    }\n\n    return this.waitForSaveToComplete(() => {\n      return this._git.commitFileIfChanged(relpath, `Added ${relpath}`, () => {\n        if (!_isFileSignificant(relpath)) {\n          return void (0)\n        }\n\n        if (extname === '.sketch') {\n          logger.info('[master] sketchtool pipeline running; please wait')\n          Sketch.sketchtoolPipeline(abspath)\n          logger.info('[master] sketchtool done')\n          return void (0)\n        }\n\n        if (extname === '.js') {\n          return this._component.FileModel.ingestOne(this.folder, relpath, (err, file) => {\n            if (err) return logger.info(err)\n            logger.info('[master] file ingested:', abspath)\n            if (relpath === this._component.fetchActiveBytecodeFile().get('relpath')) {\n              file.set('substructInitialized', file.reinitializeSubstruct(this._config.get('config'), 'Master.handleFileAdd'))\n            }\n          })\n        }\n      })\n    })\n  }\n\n  handleFileRemove (abspath) {\n    const relpath = path.relative(this.folder, abspath)\n    const extname = path.extname(relpath)\n\n    if (extname === '.sketch' || extname === '.svg') {\n      delete this._knownDesigns[relpath]\n      this.emitDesignChange(relpath)\n    }\n\n    return this.waitForSaveToComplete(() => {\n      return this._git.commitFileIfChanged(relpath, `Removed ${relpath}`, () => {\n        if (!_isFileSignificant(relpath)) {\n          return void (0)\n        }\n\n        if (extname === '.js') {\n          return this._component.FileModel.expelOne(relpath, (err) => {\n            if (err) return logger.info(err)\n            logger.info('[master] file expelled:', abspath)\n          })\n        }\n      })\n    })\n  }\n\n  handleSemverTagChange (tag, cb) {\n    const file = this._component.fetchActiveBytecodeFile()\n    return file.writeMetadata({ version: tag }, (err) => {\n      if (err) return cb(err)\n      logger.info(`[master-git] bumped bytecode semver to ${tag}`)\n      return cb(null, tag)\n    })\n  }\n\n  // /**\n  //  * methods\n  //  * =======\n  //  */\n\n  masterHeartbeat ({ params }, cb) {\n    return cb(null, {\n      folder: this.folder,\n      isReady: this._isReadyToReceiveMethods,\n      isSaving: this._isSaving,\n      websocketReadyState: this.proc.getReadyState(),\n      isCommitting: this._git.hasAnyPendingCommits(),\n      gitUndoables: this._git.getGitUndoablesUptoBase(),\n      gitRedoables: this._git.getGitRedoablesUptoBase()\n    })\n  }\n\n  doesProjectHaveUnsavedChanges (message, cb) {\n    return Git.status(this.folder, {}, (statusErr, statusesDict) => {\n      if (statusErr) return cb(statusErr)\n      if (Object.keys(statusesDict).length < 1) return cb(null, false)\n      return cb(null, true)\n    })\n  }\n\n  discardProjectChanges (message, done) {\n    return Git.hardReset(this.folder, 'HEAD', (err) => {\n      if (err) return done(err)\n      return Git.removeUntrackedFiles(this.folder, (err) => {\n        if (err) return done(err)\n        return done()\n      })\n    })\n  }\n\n  fetchProjectInfo ({ params: [projectName, haikuUsername, haikuPassword, fetchOptions = {}] }, cb) {\n    return this._git.fetchFolderState('fetch-info', fetchOptions, (err) => {\n      if (err) return cb(err)\n      return this._git.getCurrentShareInfo(2000, cb)\n    })\n  }\n\n  gitUndo ({ params: [undoOptions] }, cb) {\n    // Doing an undo while we're saving probably puts us into a bad state\n    if (this._isSaving) {\n      logger.info('[master] cannot undo while saving')\n      return cb()\n    }\n    logger.info('[master] pushing undo request onto queue')\n    return this._git.undo(undoOptions, cb)\n  }\n\n  gitRedo ({ params: [redoOptions] }, cb) {\n    // Doing an redo while we're saving probably puts us into a bad state\n    if (this._isSaving) {\n      logger.info('[master] cannot redo while saving')\n      return cb()\n    }\n    logger.info('[master] pushing redo request onto queue')\n    return this._git.redo(redoOptions, cb)\n  }\n\n  loadAssets (done) {\n    return walkFiles(this.folder, (err, entries) => {\n      if (err) return done(err)\n      entries.forEach((entry) => {\n        const extname = path.extname(entry.path)\n        if (DESIGN_EXTNAMES[extname]) {\n          const relpath = path.normalize(path.relative(this.folder, entry.path))\n          this._knownDesigns[relpath] = { relpath, abspath: entry.path, dtModified: Date.now() }\n        }\n      })\n      return this.getAssets(done)\n    })\n  }\n\n  getAssets (done) {\n    return done(null, this.getAssetDirectoryInfo())\n  }\n\n  getAssetDirectoryInfo () {\n    const info = Asset.assetsToDirectoryStructure(this._knownDesigns)\n    const { primaryAssetPath } = ProjectFolder.getProjectNameVariations(this.folder)\n    info.forEach((asset) => {\n      if (asset.relpath && (path.normalize(asset.relpath) === primaryAssetPath)) {\n        asset.isPrimaryDesign = true\n      }\n    })\n    return info\n  }\n\n  fetchAssets (message, done) {\n    if (Object.keys(this._knownDesigns).length > 0) {\n      return this.getAssets(done)\n    } else {\n      return this.loadAssets(done)\n    }\n  }\n\n  linkAsset ({ params: [abspath] }, done) {\n    const basename = path.basename(abspath)\n    const relpath = path.join('designs', basename)\n    const destination = path.join(this.folder, relpath)\n    return fse.copy(abspath, destination, (copyErr) => {\n      if (copyErr) return done(copyErr)\n      this._knownDesigns[relpath] = { relpath, abspath: destination, dtModified: Date.now() }\n      return done(null, this.getAssetDirectoryInfo())\n    })\n  }\n\n  unlinkAsset ({ params: [relpath] }, done) {\n    if (!relpath || relpath.length < 2) return done(new Error('Relative path too short'))\n    const abspath = path.join(this.folder, relpath)\n    return fse.remove(abspath, (removeErr) => {\n      if (removeErr) return done(removeErr)\n      delete this._knownDesigns[relpath]\n      return done(null, this.getAssetDirectoryInfo())\n    })\n  }\n\n  selectElement (message, cb) {\n    // this is a no-op in master\n    return cb()\n  }\n\n  unselectElement (message, cb) {\n    // this is a no-op in master\n    return cb()\n  }\n\n  setTimelineName ({ params }, cb) {\n    this._component.setTimelineName.apply(this._component, params)\n    return cb()\n  }\n\n  setTimelineTime ({ params }, cb) {\n    this._component.setTimelineTime.apply(this._component, params)\n    return cb()\n  }\n\n  readMetadata ({ params }, cb) {\n    return this._component.readMetadata.apply(this._component, params.concat(cb))\n  }\n\n  readAllStateValues ({ params }, cb) {\n    return this._component.readAllStateValues.apply(this._component, params.concat(cb))\n  }\n\n  readAllEventHandlers ({ params }, cb) {\n    return this._component.readAllEventHandlers.apply(this._component, params.concat(cb))\n  }\n\n  setInteractionMode (message, cb) {\n    // this is a no-op in master\n    return cb()\n  }\n\n  previewProject ({ params: [projectName, previewOptions = {}] }, cb) {\n    // TODO: Create preview.html and launch in the user's browser\n    return cb(new Error('[master] Method not yet implemented'))\n  }\n\n  /**\n   * bytecode actions\n   * ================\n   */\n\n  bytecodeAction (action, params, cb) {\n    if (!this._component) return cb(new Error('[master] Component not initialized'))\n    let file = this._component.fetchActiveBytecodeFile()\n    if (!file) return cb(new Error('[master] File not initialized'))\n    return file[action].apply(file, params.concat(cb))\n  }\n\n  instantiateComponent ({ params }, cb) {\n    return this.bytecodeAction('instantiateComponent', params, cb)\n  }\n\n  deleteComponent ({ params }, cb) {\n    return this.bytecodeAction('deleteComponent', params, cb)\n  }\n\n  mergeDesigns ({ params }, cb) {\n    return this.bytecodeAction('mergeDesigns', params, cb)\n  }\n\n  applyPropertyValue ({ params }, cb) {\n    return this.bytecodeAction('applyPropertyValue', params, cb)\n  }\n\n  applyPropertyDelta ({ params }, cb) {\n    return this.bytecodeAction('applyPropertyDelta', params, cb)\n  }\n\n  applyPropertyGroupValue ({ params }, cb) {\n    return this.bytecodeAction('applyPropertyGroupValue', params, cb)\n  }\n\n  applyPropertyGroupDelta ({ params }, cb) {\n    return this.bytecodeAction('applyPropertyGroupDelta', params, cb)\n  }\n\n  resizeContext ({ params }, cb) {\n    return this.bytecodeAction('resizeContext', params, cb)\n  }\n\n  changeKeyframeValue ({ params }, cb) {\n    return this.bytecodeAction('changeKeyframeValue', params, cb)\n  }\n\n  changePlaybackSpeed ({ params }, cb) {\n    return this.bytecodeAction('changePlaybackSpeed', params, cb)\n  }\n\n  changeSegmentCurve ({ params }, cb) {\n    return this.bytecodeAction('changeSegmentCurve', params, cb)\n  }\n\n  changeSegmentEndpoints ({ params }, cb) {\n    return this.bytecodeAction('changeSegmentEndpoints', params, cb)\n  }\n\n  createKeyframe ({ params }, cb) {\n    return this.bytecodeAction('createKeyframe', params, cb)\n  }\n\n  createTimeline ({ params }, cb) {\n    return this.bytecodeAction('createTimeline', params, cb)\n  }\n\n  deleteKeyframe ({ params }, cb) {\n    return this.bytecodeAction('deleteKeyframe', params, cb)\n  }\n\n  deleteTimeline ({ params }, cb) {\n    return this.bytecodeAction('deleteTimeline', params, cb)\n  }\n\n  duplicateTimeline ({ params }, cb) {\n    return this.bytecodeAction('duplicateTimeline', params, cb)\n  }\n\n  joinKeyframes ({ params }, cb) {\n    return this.bytecodeAction('joinKeyframes', params, cb)\n  }\n\n  moveSegmentEndpoints ({ params }, cb) {\n    return this.bytecodeAction('moveSegmentEndpoints', params, cb)\n  }\n\n  moveKeyframes ({ params }, cb) {\n    return this.bytecodeAction('moveKeyframes', params, cb)\n  }\n\n  renameTimeline ({ params }, cb) {\n    return this.bytecodeAction('renameTimeline', params, cb)\n  }\n\n  sliceSegment ({ params }, cb) {\n    return this.bytecodeAction('sliceSegment', params, cb)\n  }\n\n  splitSegment ({ params }, cb) {\n    return this.bytecodeAction('splitSegment', params, cb)\n  }\n\n  zMoveToFront ({ params }, cb) {\n    return this.bytecodeAction('zMoveToFront', params, cb)\n  }\n\n  zMoveForward ({ params }, cb) {\n    return this.bytecodeAction('zMoveForward', params, cb)\n  }\n\n  zMoveBackward ({ params }, cb) {\n    return this.bytecodeAction('zMoveBackward', params, cb)\n  }\n\n  zMoveToBack ({ params }, cb) {\n    return this.bytecodeAction('zMoveToBack', params, cb)\n  }\n\n  reorderElement ({ params }, cb) {\n    return this.bytecodeAction('reorderElement', params, cb)\n  }\n\n  groupElements ({ params }, cb) {\n    return this.bytecodeAction('groupElements', params, cb)\n  }\n\n  ungroupElements ({ params }, cb) {\n    return this.bytecodeAction('ungroupElements', params, cb)\n  }\n\n  hideElements ({ params }, cb) {\n    return this.bytecodeAction('hideElements', params, cb)\n  }\n\n  pasteThing ({ params }, cb) {\n    return this.bytecodeAction('pasteThing', params, cb)\n  }\n\n  deleteThing ({ params }, cb) {\n    return this.bytecodeAction('deleteThing', params, cb)\n  }\n\n  upsertStateValue ({ params }, cb) {\n    return this.bytecodeAction('upsertStateValue', params, cb)\n  }\n\n  deleteStateValue ({ params }, cb) {\n    return this.bytecodeAction('deleteStateValue', params, cb)\n  }\n\n  upsertEventHandler ({ params }, cb) {\n    return this.bytecodeAction('upsertEventHandler', params, cb)\n  }\n\n  deleteEventHandler ({ params }, cb) {\n    return this.bytecodeAction('deleteEventHandler', params, cb)\n  }\n\n  writeMetadata ({ params }, cb) {\n    return this.bytecodeAction('writeMetadata', params, cb)\n  }\n\n  /**\n   * here be dragons\n   * ===============\n   */\n\n  /**\n   * @method initializeFolder\n   */\n  initializeFolder ({ params: [projectName, haikuUsername, haikuPassword, projectOptions] }, done) {\n    // We need to clear off undos in the case that somebody made an fs-based commit between sessions;\n    // if we tried to reset to a previous \"known\" undoable, we'd miss the missing intermediate one.\n    // This has to happen in initializeFolder because it's here that we set the 'isBase' undoable.\n    this._git.restart({\n      projectName,\n      haikuUsername,\n      haikuPassword,\n      branchName: DEFAULT_BRANCH_NAME\n    })\n\n    // Note: 'ensureProjectFolder' and/or 'buildProjectContent' should already have ran by this point.\n    return async.series([\n      (cb) => {\n        return this._git.initializeProject(projectOptions, cb)\n      },\n\n      // Now that we've (maybe) cloned content, we need to create any other necessary files that _might not_ yet\n      // exist in the folder. You may note that we run this method _before_ this process, and ask yourself: why twice?\n      // Well, don't be fooled. Both methods are necessary due to the way git pulling is handled: if a project has\n      // never had remote content pulled, but has changes, we move those changes away them copy them back in on top of\n      // the cloned content. Which means we have to be sparing with what we create on the first run, but also need\n      // to create any missing remainders on the second run.\n      (cb) => {\n        return ProjectFolder.buildProjectContent(null, this.folder, projectName, 'haiku', {\n          organizationName: projectOptions.organizationName, // Important: Must set this here or the package.name will be wrong\n          skipContentCreation: false,\n          skipCDNBundles: true\n        }, cb)\n      },\n\n      (cb) => {\n        return this._git.commitProjectIfChanged('Initialized folder', cb)\n      },\n\n      // Make sure we are starting with a good git history\n      (cb) => {\n        return this._git.setUndoBaselineIfHeadCommitExists(cb)\n      }\n    ], (err, results) => {\n      if (err) return done(err)\n      return done(null, results[results.length - 1])\n    })\n  }\n\n  /**\n   * @method restartProject\n   * Just a vanity method used to distinguish starts from restarts.\n   * Should be exactly the same as startProject since this only occurs\n   * If the MasterProcess has crashed and we need to reboot it.\n   */\n  restartProject (message, done) {\n    message.restart = true\n    return this.startProject(message, done)\n  }\n\n  /**\n   * @method startProject\n   */\n  startProject (message, done) {\n    const loggingPrefix = (message.restart) ? 'restart project' : 'start project'\n\n    logger.info(`[master] ${loggingPrefix}: ${this.folder}`)\n\n    this._mod.restart()\n    this._git.restart()\n\n    const response = {\n      projectName: null\n    }\n\n    return async.series([\n      // Load the user's configuration defined in haiku.js (sort of LEGACY)\n      (cb) => {\n        logger.info(`[master] ${loggingPrefix}: loading configuration for ${this.folder}`)\n        return this._config.load(this.folder, (err) => {\n          if (err) return done(err)\n          // Gotta make this available after we load the config, but before anything else, since the\n          // done callback happens immediately if we've already initialized this master process once.\n          response.projectName = this._config.get('config.name')\n          return cb()\n        })\n      },\n\n      // Initialize the ActiveComponent and file models\n      (cb) => {\n        // No need to reinitialize if already in memory\n        if (!this._component) {\n          logger.info(`[master] ${loggingPrefix}: creating active component`)\n\n          this._component = new ActiveComponent({\n            alias: 'master', // Don't be fooled, this is not a branch name\n            folder: this.folder,\n            userconfig: this._config.get('config'),\n            websocket: {/* websocket */},\n            platform: {/* window */},\n            envoy: ProcessBase.HAIKU.envoy || {\n              host: process.env.ENVOY_HOST,\n              port: process.env.ENVOY_PORT\n            },\n            file: {\n              doShallowWorkOnly: false, // Must override the in-memory-only defaults\n              skipDiffLogging: false // Must override the in-memory-only defaults\n            }\n          })\n\n          // This is required so that a hostInstance is loaded which is (required for calculations)\n          this._component.mountApplication()\n\n          this._component.on('component:mounted', () => {\n            // Since we aren't running in the DOM cancel the raf to avoid leaked handles\n            this._component._componentInstance._context.clock.GLOBAL_ANIMATION_HARNESS.cancel()\n            return cb()\n          })\n        } else {\n          return cb()\n        }\n      },\n\n      // Take an initial commit of the starting state so we have a baseline\n      (cb) => {\n        return this._git.commitProjectIfChanged('Project setup', cb)\n      },\n\n      // Load all relevant files into memory (only JavaScript files for now)\n      (cb) => {\n        logger.info(`[master] ${loggingPrefix}: ingesting js files in ${this.folder}`)\n        return this._component.FileModel.ingestFromFolder(this.folder, {\n          exclude: _excludeIfNotJs\n        }, cb)\n      },\n\n      // Do any setup necessary on the in-memory bytecode object\n      (cb) => {\n        const file = this._component.fetchActiveBytecodeFile()\n        if (file) {\n          logger.info(`[master] ${loggingPrefix}: initializing bytecode`)\n          file.set('substructInitialized', file.reinitializeSubstruct(this._config.get('config'), 'Master.startProject'))\n          return file.performComponentWork((bytecode, mana, wrapup) => wrapup(), cb)\n        } else {\n          return cb()\n        }\n      },\n\n      // Take an initial commit of the starting state so we have a baseline\n      (cb) => {\n        return this._git.commitProjectIfChanged('Code setup', cb)\n      },\n\n      // Start watching the file system for changes\n      (cb) => {\n        // No need to reinitialize if already in memory\n        if (!this._watcher) {\n          logger.info(`[master] ${loggingPrefix}: initializing file watcher`, this.folder)\n          this._watcher = new Watcher()\n          this._watcher.watch(this.folder)\n          this._watcher.on('change', this.handleFileChange.bind(this))\n          this._watcher.on('add', this.handleFileAdd.bind(this))\n          this._watcher.on('remove', this.handleFileRemove.bind(this))\n          logger.info(`[master] ${loggingPrefix}: file watcher is now watching`, this.folder)\n          return cb()\n        } else {\n          return cb()\n        }\n      },\n\n      // Make sure we are starting with a good git history\n      (cb) => {\n        return this._git.setUndoBaselineIfHeadCommitExists(cb)\n      },\n\n      // Finish up and signal that we are ready\n      (cb) => {\n        this._isReadyToReceiveMethods = true\n        logger.info(`[master] ${loggingPrefix}: ready`)\n        return cb(null, response)\n      }\n    ], (err, results) => {\n      if (err) return done(err)\n      return done(null, results[results.length - 1])\n    })\n  }\n\n  /**\n   * @method saveProject\n   */\n  saveProject ({ params: [projectName, haikuUsername, haikuPassword, saveOptions = {}] }, done) {\n    const finish = (err, out) => {\n      this._isSaving = false\n      return done(err, out)\n    }\n\n    if (this._isSaving) {\n      logger.info('[master] project save: already in progress! short circuiting')\n      return done()\n    }\n\n    this._isSaving = true\n\n    logger.info('[master] project save')\n\n    return async.series([\n      // Check to see if a save is even necessary, and return early if not\n      (cb) => {\n        return this._git.getExistingShareDataIfSaveIsUnnecessary((err, existingShareData) => {\n          if (err) return cb(err)\n          if (existingShareData) { // Presence of share data means early return\n            return cb(true, existingShareData) // eslint-disable-line\n          }\n          return cb() // Falsy share data means perform the save\n        })\n      },\n\n      // Populate the bytecode's metadata. This may be a no-op if the file has already been saved\n      (cb) => {\n        logger.info('[master] project save: assigning metadata')\n\n        const {\n          semverVersion,\n          organizationName,\n          projectName,\n          branchName\n        } = this._git.getFolderState()\n\n        const bytecodeMetadata = {\n          uuid: 'HAIKU_SHARE_UUID',\n          player: this._git.getHaikuPlayerLibVersion(),\n          version: semverVersion,\n          organization: organizationName,\n          project: projectName,\n          branch: branchName\n        }\n\n        return this._component.fetchActiveBytecodeFile().writeMetadata(bytecodeMetadata, cb)\n      },\n\n      (cb) => {\n        return this._git.commitProjectIfChanged('Updated metadata', cb)\n      },\n\n      // Build the rest of the content of the folder, including any bundles that belong on the cdn\n      (cb) => {\n        logger.info('[master] project save: populating content')\n        const { projectName } = this._git.getFolderState()\n        return ProjectFolder.buildProjectContent(null, this.folder, projectName, 'haiku', {\n          projectName: projectName,\n          haikuUsername: haikuUsername,\n          authorName: saveOptions.authorName,\n          organizationName: saveOptions.organizationName\n        }, cb)\n      },\n\n      (cb) => {\n        return this._git.commitProjectIfChanged('Populated content', cb)\n      },\n\n      // Now do all of the git/share/publish/fs operations required for the real save\n      (cb) => {\n        logger.info('[master] project save: committing, pushing, publishing')\n        return this._git.saveProject(saveOptions, cb)\n      }\n    ], (err, results) => { // async gives back _all_ results from each step\n      if (err && err !== true) return finish(err)\n      return finish(null, results[results.length - 1])\n    })\n  }\n}\n"]}