{"version":3,"sources":["../src/Master.js"],"names":["Git","Asset","Sketch","ProjectFolder","UNLOGGABLE_METHODS","METHODS_TO_RUN_IMMEDIATELY","FORBIDDEN_METHODS","logMethodMessage","handleMethodMessage","callMethodWithMessage","handleBroadcastMessage","METHOD_QUEUE_INTERVAL","SAVE_AWAIT_TIME","WATCHABLE_EXTNAMES","DESIGN_EXTNAMES","UNWATCHABLE_RELPATHS","UNWATCHABLE_BASENAMES","DEFAULT_BRANCH_NAME","_isFileSignificant","relpath","basename","extname","_excludeIfNotJs","Master","folder","Error","proc","socket","on","teardown","emit","message","cb","_config","_git","tag","handleSemverTagChange","_mod","file","info","get","_watcher","_isReadyToReceiveMethods","_methodQueue","_methodQueueInterval","setInterval","methods","splice","forEach","_knownDesigns","_component","_isSaving","clearInterval","_modificationsInterval","_envoyClient","closeConnection","stop","method","params","push","name","handleReloadComplete","setTimeout","waitForSaveToComplete","abspath","relative","dtModified","Date","now","isOpen","send","type","assets","assetsToDirectoryStructure","request","commitFileIfChanged","sketchtoolPipeline","FileModel","ingestOne","err","fetchActiveBytecodeFile","set","reinitializeSubstruct","handleModuleChange","expelOne","writeMetadata","version","isReady","isSaving","websocketReadyState","getReadyState","isCommitting","isCommittingProject","gitUndoables","getGitUndoablesUptoBase","gitRedoables","getGitRedoablesUptoBase","status","statusErr","statuses","length","done","hardReset","removeUntrackedFiles","projectName","haikuUsername","haikuPassword","fetchOptions","fetchFolderState","getCurrentShareInfo","undoOptions","undo","redoOptions","redo","entries","entry","path","normalize","getAssets","Object","keys","loadAssets","join","destination","copy","copyErr","remove","removeErr","setTimelineName","apply","setTimelineTime","readMetadata","concat","readAllStateValues","readAllEventHandlers","previewOptions","action","bytecodeAction","projectOptions","restart","branchName","series","initializeProject","buildProjectContent","organizationName","skipContentCreation","skipCDNBundles","snapshotCommitProject","setUndoBaselineIfHeadCommitExists","results","response","load","alias","userconfig","websocket","platform","envoy","HAIKU","host","process","env","ENVOY_HOST","port","ENVOY_PORT","doShallowWorkOnly","skipDiffLogging","mountApplication","_componentInstance","_context","clock","GLOBAL_ANIMATION_HARNESS","cancel","ingestFromFolder","exclude","performComponentWork","bytecode","mana","wrapup","watch","handleFileChange","bind","handleFileAdd","handleFileRemove","saveOptions","finish","out","getExistingShareDataIfSaveIsUnnecessary","existingShareData","getFolderState","semverVersion","bytecodeMetadata","uuid","player","getHaikuPlayerLibVersion","organization","project","branch","authorName","saveProject"],"mappings":"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","file":"Master.js","sourcesContent":["import { EventEmitter } from 'events'\nimport fse from 'haiku-fs-extra'\nimport path from 'path'\nimport async from 'async'\nimport walkFiles from 'haiku-serialization/src/utils/walkFiles'\nimport ActiveComponent from 'haiku-serialization/src/model/ActiveComponent'\nimport logger from 'haiku-serialization/src/utils/LoggerInstance'\nimport ProcessBase from './ProcessBase'\nimport * as Git from './Git'\nimport ProjectConfiguration from './ProjectConfiguration'\nimport * as Asset from './Asset'\nimport Watcher from './Watcher'\nimport * as Sketch from './Sketch'\nimport * as ProjectFolder from './ProjectFolder'\nimport MasterGitProject from './MasterGitProject'\nimport MasterModuleProject from './MasterModuleProject'\n\nconst UNLOGGABLE_METHODS = {\n  'masterHeartbeat': true\n}\n\nconst METHODS_TO_RUN_IMMEDIATELY = {\n  'startProject': true,\n  'initializeFolder': true,\n  'masterHeartbeat': true\n}\n\nconst FORBIDDEN_METHODS = {\n  logMethodMessage: true,\n  handleMethodMessage: true,\n  callMethodWithMessage: true,\n  handleBroadcastMessage: true\n}\n\nconst METHOD_QUEUE_INTERVAL = 64\nconst SAVE_AWAIT_TIME = 64 * 2\n\nconst WATCHABLE_EXTNAMES = {\n  '.js': true,\n  '.svg': true,\n  '.sketch': true\n}\n\nconst DESIGN_EXTNAMES = {\n  '.sketch': true,\n  '.svg': true\n}\n\nconst UNWATCHABLE_RELPATHS = {\n  'index.js': true,\n  'haiku.js': true,\n  'react-bare.js': true,\n  'react.js': true\n}\n\nconst UNWATCHABLE_BASENAMES = {\n  'index.standalone.js': true,\n  'index.embed.js': true,\n  'dom-embed.js': true,\n  'dom-standalone.js': true,\n  'react-dom.js': true,\n  '~.sketch': true // Ephemeral file generated by sketch during file writes\n}\n\nconst DEFAULT_BRANCH_NAME = 'master'\n\nfunction _isFileSignificant (relpath) {\n  if (UNWATCHABLE_RELPATHS[relpath]) return false\n  if (UNWATCHABLE_BASENAMES[path.basename(relpath)]) return false\n  if (!WATCHABLE_EXTNAMES[path.extname(relpath)]) return false\n  return true\n}\n\nfunction _excludeIfNotJs (relpath) {\n  if (path.extname(relpath) !== '.js') return true\n  return !_isFileSignificant(relpath)\n}\n\nexport default class Master extends EventEmitter {\n  constructor (folder) {\n    super()\n\n    this.folder = folder\n\n    if (!this.folder) {\n      throw new Error('[master] Master cannot launch without a folder defined')\n    }\n\n    // IPC hook to communicate with plumbing\n    this.proc = new ProcessBase('master') // 'master' is not a branch name in this context\n\n    this.proc.socket.on('close', () => {\n      this.teardown()\n      this.emit('host-disconnected')\n    })\n\n    this.proc.on('request', (message, cb) => {\n      this.handleMethodMessage(message, cb)\n    })\n\n    this.proc.socket.on('broadcast', (message) => {\n      this.handleBroadcastMessage(message)\n    })\n\n    // Encapsulation of the user's configuration content (haiku.js) (not loaded yet)\n    this._config = new ProjectConfiguration()\n\n    // Encapsulation of project actions that relate to git or cloud saving in some way\n    this._git = new MasterGitProject(this.folder)\n\n    this._git.on('semver-bumped', (tag, cb) => {\n      this.handleSemverTagChange(tag, cb)\n    })\n\n    // Encapsulation of project actions that concern the live module in other views\n    this._mod = new MasterModuleProject(this.folder, this.proc)\n\n    this._mod.on('triggering-reload', (file) => {\n      logger.info('[master] module replacment triggering', file.get('relpath'), file.get('dtLastReadStart'), file.get('dtLastWriteEnd'))\n    })\n\n    this._mod.on('reload-complete', (file) => {\n      logger.info('[master] module replacment finished', file.get('relpath'))\n    })\n\n    // To store a Watcher instance which will watch for changes on the file system\n    this._watcher = null\n\n    // Flag denotes whether we've fully initialized and are able to handle websocket methods\n    this._isReadyToReceiveMethods = false\n\n    // Queue of accumulated incoming methods we've received that we need to defer until ready\n    this._methodQueue = []\n\n    // Worker that handles processing any methods that have accumulated in our queue\n    this._methodQueueInterval = setInterval(() => {\n      if (this._isReadyToReceiveMethods) {\n        const methods = this._methodQueue.splice(0)\n        methods.forEach(({ message, cb }) => this.callMethodWithMessage(message, cb))\n      }\n    }, METHOD_QUEUE_INTERVAL)\n\n    // Dictionary of all designs in the project, mapping relpath to metadata object\n    this._knownDesigns = {}\n\n    // Store an ActiveComponent instance for method delegation\n    this._component = null\n\n    // Saving takes a while and we use this flag to avoid overlapping saves\n    this._isSaving = false\n  }\n\n  teardown () {\n    clearInterval(this._methodQueueInterval)\n    clearInterval(this._mod._modificationsInterval)\n    if (this._component) this._component._envoyClient.closeConnection()\n    if (this._watcher) this._watcher.stop()\n  }\n\n  logMethodMessage ({ method, params }) {\n    if (!UNLOGGABLE_METHODS[method]) {\n      logger.info('[master]', 'calling', method, params)\n    }\n  }\n\n  handleMethodMessage (message, cb) {\n    const { method, params } = message\n    if (METHODS_TO_RUN_IMMEDIATELY[method]) {\n      return this.callMethodWithMessage({ method, params }, cb)\n    } else {\n      return this._methodQueue.push({ message, cb })\n    }\n  }\n\n  callMethodWithMessage (message, cb) {\n    const { method, params } = message\n    if (typeof this[method] === 'function' && !FORBIDDEN_METHODS[method]) {\n      this.logMethodMessage({ method, params })\n      return this[method]({ method, params }, cb)\n    } else {\n      return cb(new Error(`[master] No such method ${method}`))\n    }\n  }\n\n  handleBroadcastMessage (message) {\n    switch (message.name) {\n      case 'component:reload:complete':\n        this._mod.handleReloadComplete(message)\n        break\n    }\n  }\n\n  waitForSaveToComplete (cb) {\n    if (this._isSaving) {\n      return setTimeout(() => {\n        return this.waitForSaveToComplete(cb)\n      }, SAVE_AWAIT_TIME)\n    } else {\n      return cb()\n    }\n  }\n\n  // /**\n  //  * watchers/handlers\n  //  * =================\n  //  */\n\n  handleFileChange (abspath) {\n    const relpath = path.relative(this.folder, abspath)\n    const extname = path.extname(relpath)\n\n    if (extname === '.sketch' || extname === '.svg') {\n      this._knownDesigns[relpath] = { relpath, abspath, dtModified: Date.now() }\n\n      if (this.proc.isOpen()) {\n        this.proc.socket.send({\n          type: 'broadcast',\n          name: 'assets-changed',\n          folder: this.folder,\n          relpath,\n          abspath,\n          assets: Asset.assetsToDirectoryStructure(this._knownDesigns)\n        })\n\n        if (extname === '.svg') {\n          logger.info('[master] merge design requested', relpath)\n          this.proc.socket.request({ type: 'action', method: 'mergeDesign', params: [this.folder, 'Default', 0, abspath] }, () => {\n            // TODO: Call rest after design merge finishes?\n          })\n        }\n      }\n    }\n\n    return this.waitForSaveToComplete(() => {\n      return this._git.commitFileIfChanged(relpath, `Changed ${relpath}`, () => {\n        if (!_isFileSignificant(relpath)) {\n          return void (0)\n        }\n\n        if (extname === '.sketch') {\n          logger.info('[master] sketchtool pipeline running; please wait')\n          Sketch.sketchtoolPipeline(abspath)\n          logger.info('[master] sketchtool done')\n          return void (0)\n        }\n\n        if (extname === '.js') {\n          return this._component.FileModel.ingestOne(this.folder, relpath, (err, file) => {\n            if (err) return logger.info(err)\n            logger.info('[master] file ingested:', abspath)\n            if (relpath === this._component.fetchActiveBytecodeFile().get('relpath')) {\n              file.set('substructInitialized', file.reinitializeSubstruct(this._config.get('config'), 'Master.handleFileChange'))\n              if (file.get('previous') !== file.get('contents')) {\n                this._mod.handleModuleChange(file)\n              }\n            }\n          })\n        }\n      })\n    })\n  }\n\n  handleFileAdd (abspath) {\n    const relpath = path.relative(this.folder, abspath)\n    const extname = path.extname(relpath)\n\n    if (extname === '.sketch' || extname === '.svg') {\n      this._knownDesigns[relpath] = { relpath, abspath, dtModified: Date.now() }\n\n      if (this.proc.isOpen()) {\n        this.proc.socket.send({\n          type: 'broadcast',\n          name: 'assets-changed',\n          folder: this.folder,\n          relpath,\n          abspath,\n          assets: Asset.assetsToDirectoryStructure(this._knownDesigns)\n        })\n      }\n    }\n\n    return this.waitForSaveToComplete(() => {\n      return this._git.commitFileIfChanged(relpath, `Added ${relpath}`, () => {\n        if (!_isFileSignificant(relpath)) {\n          return void (0)\n        }\n\n        if (extname === '.sketch') {\n          logger.info('[master] sketchtool pipeline running; please wait')\n          Sketch.sketchtoolPipeline(abspath)\n          logger.info('[master] sketchtool done')\n          return void (0)\n        }\n\n        if (extname === '.js') {\n          return this._component.FileModel.ingestOne(this.folder, relpath, (err, file) => {\n            if (err) return logger.info(err)\n            logger.info('[master] file ingested:', abspath)\n            if (relpath === this._component.fetchActiveBytecodeFile().get('relpath')) {\n              file.set('substructInitialized', file.reinitializeSubstruct(this._config.get('config'), 'Master.handleFileAdd'))\n            }\n          })\n        }\n      })\n    })\n  }\n\n  handleFileRemove (abspath) {\n    const relpath = path.relative(this.folder, abspath)\n    const extname = path.extname(relpath)\n\n    if (extname === '.sketch' || extname === '.svg') {\n      delete this._knownDesigns[relpath]\n\n      if (this.proc.isOpen()) {\n        this.proc.socket.send({\n          type: 'broadcast',\n          name: 'assets-changed',\n          folder: this.folder,\n          relpath,\n          abspath,\n          assets: Asset.assetsToDirectoryStructure(this._knownDesigns)\n        })\n      }\n    }\n\n    return this.waitForSaveToComplete(() => {\n      return this._git.commitFileIfChanged(relpath, `Removed ${relpath}`, () => {\n        if (!_isFileSignificant(relpath)) {\n          return void (0)\n        }\n\n        if (extname === '.js') {\n          return this._component.FileModel.expelOne(relpath, (err) => {\n            if (err) return logger.info(err)\n            logger.info('[master] file expelled:', abspath)\n          })\n        }\n      })\n    })\n  }\n\n  handleSemverTagChange (tag, cb) {\n    const file = this._component.fetchActiveBytecodeFile()\n    return file.writeMetadata({ version: tag }, (err) => {\n      if (err) return cb(err)\n      logger.info(`[master-git] bumped bytecode semver to ${tag}`)\n      return cb(null, tag)\n    })\n  }\n\n  // /**\n  //  * methods\n  //  * =======\n  //  */\n\n  masterHeartbeat ({ params }, cb) {\n    return cb(null, {\n      folder: this.folder,\n      isReady: this._isReadyToReceiveMethods,\n      isSaving: this._isSaving,\n      websocketReadyState: this.proc.getReadyState(),\n      isCommitting: this._git.isCommittingProject(),\n      gitUndoables: this._git.getGitUndoablesUptoBase(),\n      gitRedoables: this._git.getGitRedoablesUptoBase()\n    })\n  }\n\n  doesProjectHaveUnsavedChanges (message, cb) {\n    return Git.status(this.folder, (statusErr, statuses) => {\n      if (statusErr) return cb(statusErr)\n      if (statuses.length < 1) return cb(null, false)\n      return cb(null, true)\n    })\n  }\n\n  discardProjectChanges (message, done) {\n    return Git.hardReset(this.folder, 'HEAD', (err) => {\n      if (err) return done(err)\n      return Git.removeUntrackedFiles(this.folder, (err) => {\n        if (err) return done(err)\n        return done()\n      })\n    })\n  }\n\n  fetchProjectInfo ({ params: [projectName, haikuUsername, haikuPassword, fetchOptions = {}] }, cb) {\n    return this._git.fetchFolderState('fetch-info', fetchOptions, (err) => {\n      if (err) return cb(err)\n      return this._git.getCurrentShareInfo(2000, cb)\n    })\n  }\n\n  gitUndo ({ params: [undoOptions] }, cb) {\n    // Doing an undo while we're saving probably puts us into a bad state\n    if (this._isSaving) {\n      logger.info('[master] cannot undo while saving')\n      return cb()\n    }\n    logger.info('[master] pushing undo request onto queue')\n    return this._git.undo(undoOptions, cb)\n  }\n\n  gitRedo ({ params: [redoOptions] }, cb) {\n    // Doing an redo while we're saving probably puts us into a bad state\n    if (this._isSaving) {\n      logger.info('[master] cannot redo while saving')\n      return cb()\n    }\n    logger.info('[master] pushing redo request onto queue')\n    return this._git.redo(redoOptions, cb)\n  }\n\n  loadAssets (done) {\n    return walkFiles(this.folder, (err, entries) => {\n      if (err) return done(err)\n      entries.forEach((entry) => {\n        const extname = path.extname(entry.path)\n        if (DESIGN_EXTNAMES[extname]) {\n          const relpath = path.normalize(path.relative(this.folder, entry.path))\n          this._knownDesigns[relpath] = { relpath, abspath: entry.path, dtModified: Date.now() }\n        }\n      })\n      return this.getAssets(done)\n    })\n  }\n\n  getAssets (done) {\n    return done(null, Asset.assetsToDirectoryStructure(this._knownDesigns))\n  }\n\n  fetchAssets (message, done) {\n    if (Object.keys(this._knownDesigns).length > 0) {\n      return this.getAssets(done)\n    } else {\n      return this.loadAssets(done)\n    }\n  }\n\n  linkAsset ({ params: [abspath] }, done) {\n    const basename = path.basename(abspath)\n    const relpath = path.join('designs', basename)\n    const destination = path.join(this.folder, relpath)\n    return fse.copy(abspath, destination, (copyErr) => {\n      if (copyErr) return done(copyErr)\n      return done(null, Asset.assetsToDirectoryStructure(this._knownDesigns))\n    })\n  }\n\n  unlinkAsset ({ params: [relpath] }, done) {\n    if (!relpath || relpath.length < 2) return done(new Error('Relative path too short'))\n    const abspath = path.join(this.folder, relpath)\n    return fse.remove(abspath, (removeErr) => {\n      if (removeErr) return done(removeErr)\n      return done(null, Asset.assetsToDirectoryStructure(this._knownDesigns))\n    })\n  }\n\n  selectElement (message, cb) {\n    // this is a no-op in master\n    return cb()\n  }\n\n  unselectElement (message, cb) {\n    // this is a no-op in master\n    return cb()\n  }\n\n  setTimelineName ({ params }, cb) {\n    this._component.setTimelineName.apply(this._component, params)\n    return cb()\n  }\n\n  setTimelineTime ({ params }, cb) {\n    this._component.setTimelineTime.apply(this._component, params)\n    return cb()\n  }\n\n  readMetadata ({ params }, cb) {\n    return this._component.readMetadata.apply(this._component, params.concat(cb))\n  }\n\n  readAllStateValues ({ params }, cb) {\n    return this._component.readAllStateValues.apply(this._component, params.concat(cb))\n  }\n\n  readAllEventHandlers ({ params }, cb) {\n    return this._component.readAllEventHandlers.apply(this._component, params.concat(cb))\n  }\n\n  setInteractionMode (message, cb) {\n    // this is a no-op in master\n    return cb()\n  }\n\n  previewProject ({ params: [projectName, previewOptions = {}] }, cb) {\n    // TODO: Create preview.html and launch in the user's browser\n    return cb(new Error('[master] Method not yet implemented'))\n  }\n\n  /**\n   * bytecode actions\n   * ================\n   */\n\n  bytecodeAction (action, params, cb) {\n    if (!this._component) return cb(new Error('[master] Component not initialized'))\n    let file = this._component.fetchActiveBytecodeFile()\n    if (!file) return cb(new Error('[master] File not initialized'))\n    return file[action].apply(file, params.concat(cb))\n  }\n\n  instantiateComponent ({ params }, cb) {\n    return this.bytecodeAction('instantiateComponent', params, cb)\n  }\n\n  deleteComponent ({ params }, cb) {\n    return this.bytecodeAction('deleteComponent', params, cb)\n  }\n\n  mergeDesign ({ params }, cb) {\n    return this.bytecodeAction('mergeDesign', params, cb)\n  }\n\n  applyPropertyValue ({ params }, cb) {\n    return this.bytecodeAction('applyPropertyValue', params, cb)\n  }\n\n  applyPropertyDelta ({ params }, cb) {\n    return this.bytecodeAction('applyPropertyDelta', params, cb)\n  }\n\n  applyPropertyGroupValue ({ params }, cb) {\n    return this.bytecodeAction('applyPropertyGroupValue', params, cb)\n  }\n\n  applyPropertyGroupDelta ({ params }, cb) {\n    return this.bytecodeAction('applyPropertyGroupDelta', params, cb)\n  }\n\n  resizeContext ({ params }, cb) {\n    return this.bytecodeAction('resizeContext', params, cb)\n  }\n\n  changeKeyframeValue ({ params }, cb) {\n    return this.bytecodeAction('changeKeyframeValue', params, cb)\n  }\n\n  changePlaybackSpeed ({ params }, cb) {\n    return this.bytecodeAction('changePlaybackSpeed', params, cb)\n  }\n\n  changeSegmentCurve ({ params }, cb) {\n    return this.bytecodeAction('changeSegmentCurve', params, cb)\n  }\n\n  changeSegmentEndpoints ({ params }, cb) {\n    return this.bytecodeAction('changeSegmentEndpoints', params, cb)\n  }\n\n  createKeyframe ({ params }, cb) {\n    return this.bytecodeAction('createKeyframe', params, cb)\n  }\n\n  createTimeline ({ params }, cb) {\n    return this.bytecodeAction('createTimeline', params, cb)\n  }\n\n  deleteKeyframe ({ params }, cb) {\n    return this.bytecodeAction('deleteKeyframe', params, cb)\n  }\n\n  deleteTimeline ({ params }, cb) {\n    return this.bytecodeAction('deleteTimeline', params, cb)\n  }\n\n  duplicateTimeline ({ params }, cb) {\n    return this.bytecodeAction('duplicateTimeline', params, cb)\n  }\n\n  joinKeyframes ({ params }, cb) {\n    return this.bytecodeAction('joinKeyframes', params, cb)\n  }\n\n  moveSegmentEndpoints ({ params }, cb) {\n    return this.bytecodeAction('moveSegmentEndpoints', params, cb)\n  }\n\n  moveKeyframes ({ params }, cb) {\n    return this.bytecodeAction('moveKeyframes', params, cb)\n  }\n\n  renameTimeline ({ params }, cb) {\n    return this.bytecodeAction('renameTimeline', params, cb)\n  }\n\n  sliceSegment ({ params }, cb) {\n    return this.bytecodeAction('sliceSegment', params, cb)\n  }\n\n  splitSegment ({ params }, cb) {\n    return this.bytecodeAction('splitSegment', params, cb)\n  }\n\n  zMoveToFront ({ params }, cb) {\n    return this.bytecodeAction('zMoveToFront', params, cb)\n  }\n\n  zMoveForward ({ params }, cb) {\n    return this.bytecodeAction('zMoveForward', params, cb)\n  }\n\n  zMoveBackward ({ params }, cb) {\n    return this.bytecodeAction('zMoveBackward', params, cb)\n  }\n\n  zMoveToBack ({ params }, cb) {\n    return this.bytecodeAction('zMoveToBack', params, cb)\n  }\n\n  reorderElement ({ params }, cb) {\n    return this.bytecodeAction('reorderElement', params, cb)\n  }\n\n  groupElements ({ params }, cb) {\n    return this.bytecodeAction('groupElements', params, cb)\n  }\n\n  ungroupElements ({ params }, cb) {\n    return this.bytecodeAction('ungroupElements', params, cb)\n  }\n\n  hideElements ({ params }, cb) {\n    return this.bytecodeAction('hideElements', params, cb)\n  }\n\n  pasteThing ({ params }, cb) {\n    return this.bytecodeAction('pasteThing', params, cb)\n  }\n\n  deleteThing ({ params }, cb) {\n    return this.bytecodeAction('deleteThing', params, cb)\n  }\n\n  upsertStateValue ({ params }, cb) {\n    return this.bytecodeAction('upsertStateValue', params, cb)\n  }\n\n  deleteStateValue ({ params }, cb) {\n    return this.bytecodeAction('deleteStateValue', params, cb)\n  }\n\n  upsertEventHandler ({ params }, cb) {\n    return this.bytecodeAction('upsertEventHandler', params, cb)\n  }\n\n  deleteEventHandler ({ params }, cb) {\n    return this.bytecodeAction('deleteEventHandler', params, cb)\n  }\n\n  writeMetadata ({ params }, cb) {\n    return this.bytecodeAction('writeMetadata', params, cb)\n  }\n\n  /**\n   * here be dragons\n   * ===============\n   */\n\n  /**\n   * @method initializeFolder\n   */\n  initializeFolder ({ params: [projectName, haikuUsername, haikuPassword, projectOptions] }, done) {\n    // We need to clear off undos in the case that somebody made an fs-based commit between sessions;\n    // if we tried to reset to a previous \"known\" undoable, we'd miss the missing intermediate one.\n    // This has to happen in initializeFolder because it's here that we set the 'isBase' undoable.\n    this._git.restart({\n      projectName,\n      haikuUsername,\n      haikuPassword,\n      branchName: DEFAULT_BRANCH_NAME\n    })\n\n    // Note: 'ensureProjectFolder' and/or 'buildProjectContent' should already have ran by this point.\n    return async.series([\n      (cb) => {\n        return this._git.initializeProject(projectOptions, cb)\n      },\n\n      // Now that we've (maybe) cloned content, we need to create any other necessary files that _might not_ yet\n      // exist in the folder. You may note that we run this method _before_ this process, and ask yourself: why twice?\n      // Well, don't be fooled. Both methods are necessary due to the way git pulling is handled: if a project has\n      // never had remote content pulled, but has changes, we move those changes away them copy them back in on top of\n      // the cloned content. Which means we have to be sparing with what we create on the first run, but also need\n      // to create any missing remainders on the second run.\n      (cb) => {\n        return ProjectFolder.buildProjectContent(null, this.folder, projectName, 'haiku', {\n          organizationName: projectOptions.organizationName, // Important: Must set this here or the package.name will be wrong\n          skipContentCreation: false,\n          skipCDNBundles: true\n        }, cb)\n      },\n\n      (cb) => {\n        return this._git.snapshotCommitProject('Initialized folder', cb)\n      },\n\n      // Make sure we are starting with a good git history\n      (cb) => {\n        return this._git.setUndoBaselineIfHeadCommitExists(cb)\n      }\n    ], (err, results) => {\n      if (err) return done(err)\n      return done(null, results[results.length - 1])\n    })\n  }\n\n  /**\n   * @method startProject\n   */\n  startProject (message, done) {\n    logger.info(`[master] start project: ${this.folder}`)\n\n    this._mod.restart()\n    this._git.restart()\n\n    const response = {\n      projectName: null\n    }\n\n    return async.series([\n      // Load the user's configuration defined in haiku.js (sort of LEGACY)\n      (cb) => {\n        logger.info(`[master] start project: loading configuration for ${this.folder}`)\n        return this._config.load(this.folder, (err) => {\n          if (err) return done(err)\n          // Gotta make this available after we load the config, but before anything else, since the\n          // done callback happens immediately if we've already initialized this master process once.\n          response.projectName = this._config.get('config.name')\n          return cb()\n        })\n      },\n\n      // Initialize the ActiveComponent and file models\n      (cb) => {\n        // No need to reinitialize if already in memory\n        if (!this._component) {\n          logger.info(`[master] start project: creating active component`)\n\n          this._component = new ActiveComponent({\n            alias: 'master', // Don't be fooled, this is not a branch name\n            folder: this.folder,\n            userconfig: this._config.get('config'),\n            websocket: {/* websocket */},\n            platform: {/* window */},\n            envoy: ProcessBase.HAIKU.envoy || { host: process.env.ENVOY_HOST, port: process.env.ENVOY_PORT },\n            file: {\n              doShallowWorkOnly: false, // Must override the in-memory-only defaults\n              skipDiffLogging: false // Must override the in-memory-only defaults\n            }\n          })\n\n          // This is required so that a hostInstance is loaded which is (required for calculations)\n          this._component.mountApplication()\n\n          this._component.on('component:mounted', () => {\n            // Since we aren't running in the DOM cancel the raf to avoid leaked handles\n            this._component._componentInstance._context.clock.GLOBAL_ANIMATION_HARNESS.cancel()\n            return cb()\n          })\n        } else {\n          return cb()\n        }\n      },\n\n      // Take an initial commit of the starting state so we have a baseline\n      (cb) => {\n        return this._git.snapshotCommitProject('Project setup', cb)\n      },\n\n      // Load all relevant files into memory (only JavaScript files for now)\n      (cb) => {\n        logger.info(`[master] start project: ingesting js files in ${this.folder}`)\n        return this._component.FileModel.ingestFromFolder(this.folder, {\n          exclude: _excludeIfNotJs\n        }, cb)\n      },\n\n      // Do any setup necessary on the in-memory bytecode object\n      (cb) => {\n        const file = this._component.fetchActiveBytecodeFile()\n        if (file) {\n          logger.info(`[master] start project: initializing bytecode`)\n          file.set('substructInitialized', file.reinitializeSubstruct(this._config.get('config'), 'Master.startProject'))\n          return file.performComponentWork((bytecode, mana, wrapup) => wrapup(), cb)\n        } else {\n          return cb()\n        }\n      },\n\n      // Take an initial commit of the starting state so we have a baseline\n      (cb) => {\n        return this._git.snapshotCommitProject('Code setup', cb)\n      },\n\n      // Start watching the file system for changes\n      (cb) => {\n        // No need to reinitialize if already in memory\n        if (!this._watcher) {\n          logger.info('[master] start project: initializing file watcher', this.folder)\n          this._watcher = new Watcher()\n          this._watcher.watch(this.folder)\n          this._watcher.on('change', this.handleFileChange.bind(this))\n          this._watcher.on('add', this.handleFileAdd.bind(this))\n          this._watcher.on('remove', this.handleFileRemove.bind(this))\n          logger.info('[master] start project: file watcher is now watching', this.folder)\n          return cb()\n        } else {\n          return cb()\n        }\n      },\n\n      // Make sure we are starting with a good git history\n      (cb) => {\n        return this._git.setUndoBaselineIfHeadCommitExists(cb)\n      },\n\n      // Finish up and signal that we are ready\n      (cb) => {\n        this._isReadyToReceiveMethods = true\n        logger.info(`[master] start project: ready`)\n        return cb(null, response)\n      }\n    ], (err, results) => {\n      if (err) return done(err)\n      return done(null, results[results.length - 1])\n    })\n  }\n\n  /**\n   * @method saveProject\n   */\n  saveProject ({ params: [projectName, haikuUsername, haikuPassword, saveOptions = {}] }, done) {\n    const finish = (err, out) => {\n      this._isSaving = false\n      return done(err, out)\n    }\n\n    if (this._isSaving) {\n      logger.info('[master] project save: already in progress! short circuiting')\n      return done()\n    }\n\n    this._isSaving = true\n\n    logger.info('[master] project save')\n\n    return async.series([\n      // Check to see if a save is even necessary, and return early if not\n      (cb) => {\n        return this._git.getExistingShareDataIfSaveIsUnnecessary((err, existingShareData) => {\n          if (err) return cb(err)\n          if (existingShareData) { // Presence of share data means early return\n            return cb(true, existingShareData) // eslint-disable-line\n          }\n          return cb() // Falsy share data means perform the save\n        })\n      },\n\n      // Populate the bytecode's metadata. This may be a no-op if the file has already been saved\n      (cb) => {\n        logger.info('[master] project save: assigning metadata')\n\n        const {\n          semverVersion,\n          organizationName,\n          projectName,\n          branchName\n        } = this._git.getFolderState()\n\n        const bytecodeMetadata = {\n          uuid: 'HAIKU_SHARE_UUID',\n          player: this._git.getHaikuPlayerLibVersion(),\n          version: semverVersion,\n          organization: organizationName,\n          project: projectName,\n          branch: branchName\n        }\n\n        return this._component.fetchActiveBytecodeFile().writeMetadata(bytecodeMetadata, cb)\n      },\n\n      (cb) => {\n        return this._git.snapshotCommitProject('Updated metadata', cb)\n      },\n\n      // Build the rest of the content of the folder, including any bundles that belong on the cdn\n      (cb) => {\n        logger.info('[master] project save: populating content')\n        const { projectName } = this._git.getFolderState()\n        return ProjectFolder.buildProjectContent(null, this.folder, projectName, 'haiku', {\n          projectName: projectName,\n          haikuUsername: haikuUsername,\n          authorName: saveOptions.authorName,\n          organizationName: saveOptions.organizationName\n        }, cb)\n      },\n\n      (cb) => {\n        return this._git.snapshotCommitProject('Populated content', cb)\n      },\n\n      // Now do all of the git/share/publish/fs operations required for the real save\n      (cb) => {\n        logger.info('[master] project save: committing, pushing, publishing')\n        return this._git.saveProject(saveOptions, cb)\n      }\n    ], (err, results) => { // async gives back _all_ results from each step\n      if (err && err !== true) return finish(err)\n      return finish(null, results[results.length - 1])\n    })\n  }\n}\n"]}