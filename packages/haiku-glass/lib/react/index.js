'use strict';

var _jsxFileName = 'src/react/index.js';

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactDom = require('react-dom');

var _reactDom2 = _interopRequireDefault(_reactDom);

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _path = require('path');

var _path2 = _interopRequireDefault(_path);

var _qs = require('qs');

var _qs2 = _interopRequireDefault(_qs);

var _Websocket = require('haiku-serialization/src/ws/Websocket');

var _Websocket2 = _interopRequireDefault(_Websocket);

var _Glass = require('./Glass');

var _Glass2 = _interopRequireDefault(_Glass);

var _carbonite = require('haiku-serialization/src/utils/carbonite');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

if (process.env.HAIKU_RELEASE_ENVIRONMENT === 'production' || process.env.HAIKU_RELEASE_ENVIRONMENT === 'staging') {
  window.Raven.config('https://287e52df9cfd48aab7f6091ec17a5921@sentry.io/226362', {
    environment: process.env.HAIKU_RELEASE_ENVIRONMENT || 'development',
    release: process.env.HAIKU_RELEASE_VERSION,
    dataCallback: _carbonite.sentryCallback
  });
  window.Raven.context(function () {
    go();
  });
} else {
  go();
}

function _traceKitFormatErrorStack(error) {
  if (!error) return null;
  if (typeof error.stack !== 'string') return null;
  error.stack = error.stack.split('\n').map(function (line) {
    return line.split(/ at\s+\//).join(' at (/');
  }).join('\n');
  return error;
}

window.onerror = function (msg, url, line, col, error) {
  if (process.env.HAIKU_RELEASE_ENVIRONMENT === 'production' || process.env.HAIKU_RELEASE_ENVIRONMENT === 'staging') {
    _traceKitFormatErrorStack(error);
    window.Raven.captureException(error);
  }
};

function go() {
  // We are in a webview; use query string parameters for boot-up configuration
  var search = (window.location.search || '').split('?')[1] || '';
  var params = _qs2.default.parse(search, { plainObjects: true });
  var config = _lodash2.default.assign({}, params);
  if (!config.folder) throw new Error('A folder (the absolute path to the user project) is required');
  function _fixPlumbingUrl(url) {
    return url.replace(/^http/, 'ws');
  }

  var userconfig = require(_path2.default.join(config.folder, 'haiku.js'));

  var websocket = config.plumbing ? new _Websocket2.default(_fixPlumbingUrl(config.plumbing), config.folder, 'controllee', 'glass') : { on: function on() {}, send: function send() {}, method: function method() {}, request: function request() {}, action: function action() {}

    // Add extra context to Sentry reports, this info is also used
    // by carbonite.
  };var folderHelper = config.folder.split('/').reverse();
  window.Raven.setExtraContext({
    organizationName: folderHelper[1],
    projectName: folderHelper[0],
    projectPath: config.folder
  });
  window.Raven.setUserContext({
    email: config.email
  });

  _reactDom2.default.render(_react2.default.createElement(_Glass2.default, {
    envoy: config.envoy,
    userconfig: userconfig,
    websocket: websocket,
    folder: config.folder,
    projectName: userconfig.name || 'untitled',
    __source: {
      fileName: _jsxFileName,
      lineNumber: 66
    },
    __self: this
  }), document.getElementById('root'));
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9yZWFjdC9pbmRleC5qcyJdLCJuYW1lcyI6WyJwcm9jZXNzIiwiZW52IiwiSEFJS1VfUkVMRUFTRV9FTlZJUk9OTUVOVCIsIndpbmRvdyIsIlJhdmVuIiwiY29uZmlnIiwiZW52aXJvbm1lbnQiLCJyZWxlYXNlIiwiSEFJS1VfUkVMRUFTRV9WRVJTSU9OIiwiZGF0YUNhbGxiYWNrIiwiY29udGV4dCIsImdvIiwiX3RyYWNlS2l0Rm9ybWF0RXJyb3JTdGFjayIsImVycm9yIiwic3RhY2siLCJzcGxpdCIsIm1hcCIsImxpbmUiLCJqb2luIiwib25lcnJvciIsIm1zZyIsInVybCIsImNvbCIsImNhcHR1cmVFeGNlcHRpb24iLCJzZWFyY2giLCJsb2NhdGlvbiIsInBhcmFtcyIsInBhcnNlIiwicGxhaW5PYmplY3RzIiwiYXNzaWduIiwiZm9sZGVyIiwiRXJyb3IiLCJfZml4UGx1bWJpbmdVcmwiLCJyZXBsYWNlIiwidXNlcmNvbmZpZyIsInJlcXVpcmUiLCJ3ZWJzb2NrZXQiLCJwbHVtYmluZyIsIm9uIiwic2VuZCIsIm1ldGhvZCIsInJlcXVlc3QiLCJhY3Rpb24iLCJmb2xkZXJIZWxwZXIiLCJyZXZlcnNlIiwic2V0RXh0cmFDb250ZXh0Iiwib3JnYW5pemF0aW9uTmFtZSIsInByb2plY3ROYW1lIiwicHJvamVjdFBhdGgiLCJzZXRVc2VyQ29udGV4dCIsImVtYWlsIiwicmVuZGVyIiwiZW52b3kiLCJuYW1lIiwiZG9jdW1lbnQiLCJnZXRFbGVtZW50QnlJZCJdLCJtYXBwaW5ncyI6Ijs7OztBQUFBOzs7O0FBQ0E7Ozs7QUFDQTs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFDQTs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFFQSxJQUFJQSxRQUFRQyxHQUFSLENBQVlDLHlCQUFaLEtBQTBDLFlBQTFDLElBQTBERixRQUFRQyxHQUFSLENBQVlDLHlCQUFaLEtBQTBDLFNBQXhHLEVBQW1IO0FBQ2pIQyxTQUFPQyxLQUFQLENBQWFDLE1BQWIsQ0FBb0IsMkRB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QU9DLEtBQVAsQ0FBYTZDLGNBQWIsQ0FBNEI7QUFDMUJDLFdBQU83QyxPQUFPNkM7QUFEWSxHQUE1Qjs7QUFJQSxxQkFBU0MsTUFBVCxDQUNFO0FBQ0UsV0FBTzlDLE9BQU8rQyxLQURoQjtBQUVFLGdCQUFZbEIsVUFGZDtBQUdFLGVBQVdFLFNBSGI7QUFJRSxZQUFRL0IsT0FBT3lCLE1BSmpCO0FBS0UsaUJBQWFJLFdBQVdtQixJQUFYLElBQW1CLFVBTGxDO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLElBREYsRUFRRUMsU0FBU0MsY0FBVCxDQUF3QixNQUF4QixDQVJGO0FBVUQiLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5pbXBvcnQgUmVhY3RET00gZnJvbSAncmVhY3QtZG9tJ1xuaW1wb3J0IGxvZGFzaCBmcm9tICdsb2Rhc2gnXG5pbXBvcnQgcGF0aCBmcm9tICdwYXRoJ1xuaW1wb3J0IHFzIGZyb20gJ3FzJ1xuaW1wb3J0IFdlYnNvY2tldCBmcm9tICdoYWlrdS1zZXJpYWxpemF0aW9uL3NyYy93cy9XZWJzb2NrZXQnXG5pbXBvcnQgR2xhc3MgZnJvbSAnLi9HbGFzcydcbmltcG9ydCB7c2VudHJ5Q2FsbGJhY2t9IGZyb20gJ2hhaWt1LXNlcmlhbGl6YXRpb24vc3JjL3V0aWxzL2NhcmJvbml0ZSdcblxuaWYgKHByb2Nlc3MuZW52LkhBSUtVX1JFTEVBU0VfRU5WSVJPTk1FTlQgPT09ICdwcm9kdWN0aW9uJyB8fCBwcm9jZXNzLmVudi5IQUlLVV9SRUxFQVNFX0VOVklST05NRU5UID09PSAnc3RhZ2luZycpIHtcbiAgd2luZG93LlJhdmVuLmNvbmZpZygnaHR0cHM6Ly8yODdlNTJkZjljZmQ0OGFhYjdmNjA5MWVjMTdhNTkyMUBzZW50cnkuaW8vMjI2MzYyJywge1xuICAgIGVudmlyb25tZW50OiBwcm9jZXNzLmVudi5IQUlLVV9SRUxFQVNFX0VOVklST05NRU5UIHx8ICdkZXZlbG9wbWVudCcsXG4gICAgcmVsZWFzZTogcHJvY2Vzcy5lbnYuSEFJS1VfUkVMRUFTRV9WRVJTSU9OLFxuICAgIGRhdGFDYWxsYmFjazogc2VudHJ5Q2FsbGJhY2tcbiAgfSlcbiAgd2luZG93LlJhdmVuLmNvbnRleHQoKCkgPT4ge1xuICAgIGdvKClcbiAgfSlcbn0gZWxzZSB7XG4gIGdvKClcbn1cblxuZnVuY3Rpb24gX3RyYWNlS2l0Rm9ybWF0RXJyb3JTdGFjayAoZXJyb3IpIHtcbiAgaWYgKCFlcnJvcikgcmV0dXJuIG51bGxcbiAgaWYgKHR5cGVvZiBlcnJvci5zdGFjayAhPT0gJ3N0cmluZycpIHJldHVybiBudWxsXG4gIGVycm9yLnN0YWNrID0gZXJyb3Iuc3RhY2suc3BsaXQoJ1xcbicpLm1hcCgobGluZSkgPT4ge1xuICAgIHJldHVybiBsaW5lLnNwbGl0KC8gYXRcXHMrXFwvLykuam9pbignIGF0ICgvJylcbiAgfSkuam9pbignXFxuJylcbiAgcmV0dXJuIGVycm9yXG59XG5cbndpbmRvdy5vbmVycm9yID0gZnVuY3Rpb24gKG1zZywgdXJsLCBsaW5lLCBjb2wsIGVycm9yKSB7XG4gIGlmIChwcm9jZXNzLmVudi5IQUlLVV9SRUxFQVNFX0VOVklST05NRU5UID09PSAncHJvZHVjdGlvbicgfHwgcHJvY2Vzcy5lbnYuSEFJS1VfUkVMRUFTRV9FTlZJUk9OTUVOVCA9PT0gJ3N0YWdpbmcnKSB7XG4gICAgX3RyYWNlS2l0Rm9ybWF0RXJyb3JTdGFjayhlcnJvcilcbiAgICB3aW5kb3cuUmF2ZW4uY2FwdHVyZUV4Y2VwdGlvbihlcnJvcilcbiAgfVxufVxuXG5mdW5jdGlvbiBnbyAoKSB7XG4gIC8vIFdlIGFyZSBpbiBhIHdlYnZpZXc7IHVzZSBxdWVyeSBzdHJpbmcgcGFyYW1ldGVycyBmb3IgYm9vdC11cCBjb25maWd1cmF0aW9uXG4gIGNvbnN0IHNlYXJjaCA9ICh3aW5kb3cubG9jYXRpb24uc2VhcmNoIHx8ICcnKS5zcGxpdCgnPycpWzFdIHx8ICcnXG4gIGNvbnN0IHBhcmFtcyA9IHFzLnBhcnNlKHNlYXJjaCwgeyBwbGFpbk9iamVjdHM6IHRydWUgfSlcbiAgY29uc3QgY29uZmlnID0gbG9kYXNoLmFzc2lnbih7fSwgcGFyYW1zKVxuICBpZiAoIWNvbmZpZy5mb2xkZXIpIHRocm93IG5ldyBFcnJvcignQSBmb2xkZXIgKHRoZSBhYnNvbHV0ZSBwYXRoIHRvIHRoZSB1c2VyIHByb2plY3QpIGlzIHJlcXVpcmVkJylcbiAgZnVuY3Rpb24gX2ZpeFBsdW1iaW5nVXJsICh1cmwpIHsgcmV0dXJuIHVybC5yZXBsYWNlKC9eaHR0cC8sICd3cycpIH1cblxuICBjb25zdCB1c2VyY29uZmlnID0gcmVxdWlyZShwYXRoLmpvaW4oY29uZmlnLmZvbGRlciwgJ2hhaWt1LmpzJykpXG5cbiAgY29uc3Qgd2Vic29ja2V0ID0gKGNvbmZpZy5wbHVtYmluZylcbiAgICA/IG5ldyBXZWJzb2NrZXQoX2ZpeFBsdW1iaW5nVXJsKGNvbmZpZy5wbHVtYmluZyksIGNvbmZpZy5mb2xkZXIsICdjb250cm9sbGVlJywgJ2dsYXNzJylcbiAgICA6IHsgb246ICgpID0+IHt9LCBzZW5kOiAoKSA9PiB7fSwgbWV0aG9kOiAoKSA9PiB7fSwgcmVxdWVzdDogKCkgPT4ge30sIGFjdGlvbjogKCkgPT4ge30gfVxuXG4gIC8vIEFkZCBleHRyYSBjb250ZXh0IHRvIFNlbnRyeSByZXBvcnRzLCB0aGlzIGluZm8gaXMgYWxzbyB1c2VkXG4gIC8vIGJ5IGNhcmJvbml0ZS5cbiAgY29uc3QgZm9sZGVySGVscGVyID0gY29uZmlnLmZvbGRlci5zcGxpdCgnLycpLnJldmVyc2UoKVxuICB3aW5kb3cuUmF2ZW4uc2V0RXh0cmFDb250ZXh0KHtcbiAgICBvcmdhbml6YXRpb25OYW1lOiBmb2xkZXJIZWxwZXJbMV0sXG4gICAgcHJvamVjdE5hbWU6IGZvbGRlckhlbHBlclswXSxcbiAgICBwcm9qZWN0UGF0aDogY29uZmlnLmZvbGRlcixcbiAgfSlcbiAgd2luZG93LlJhdmVuLnNldFVzZXJDb250ZXh0KHtcbiAgICBlbWFpbDogY29uZmlnLmVtYWlsXG4gIH0pXG5cbiAgUmVhY3RET00ucmVuZGVyKFxuICAgIDxHbGFzc1xuICAgICAgZW52b3k9e2NvbmZpZy5lbnZveX1cbiAgICAgIHVzZXJjb25maWc9e3VzZXJjb25maWd9XG4gICAgICB3ZWJzb2NrZXQ9e3dlYnNvY2tldH1cbiAgICAgIGZvbGRlcj17Y29uZmlnLmZvbGRlcn1cbiAgICAgIHByb2plY3ROYW1lPXt1c2VyY29uZmlnLm5hbWUgfHwgJ3VudGl0bGVkJ31cbiAgICAgIC8+LFxuICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdyb290JylcbiAgKVxufVxuIl19