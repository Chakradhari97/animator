'use strict'

var test = require('tape')
var path = require('path')
var ActiveComponent = require('./../../src/bll/ActiveComponent')
var Element = require('./../../src/bll/Element')
var File = require('./../../src/bll/File')

test('activeComponent.instantiateComponent', function (t) {
  t.plan(3)
  var ac = new ActiveComponent({
    alias: 'test',
    uid: path.join(__dirname, '..', 'fixtures', 'projects', 'james') + '::' + undefined,
    folder: path.join(__dirname, '..', 'fixtures', 'projects', 'james'),
    userconfig: {},
    websocket: { send: () => {}, on: () => {}, action: () => {} },
    platform: {},
    envoy: { mock: true }
  })
  ac.fetchActiveBytecodeFile().doShallowWorkOnly = false // We would like to see diffs of the operations during this test
  File.UPDATE_OPTIONS.shouldUpdateFileSystem = false // Don't clobber the test fixtures
  ac.mountApplication()
  ac.on('component:mounted', () => {
    ac.instance._context.clock.GLOBAL_ANIMATION_HARNESS.cancel()
    ac.instantiateComponent('designs/Heart.svg', { x: 0, y: 0 }, { from: 'test' }, (err, coords, element) => {
      if (err) throw err
      t.equal(element.getComponentId(), '7cb1d36a8584', 'el selected found')
      t.equal(Element.where({ _isSelected: true }).length, 1, 'one selected el')
      t.equal(ac.fetchActiveBytecodeFile().contents, "module.exports = {\n  options: {},\n  metadata: { uuid: \"HAIKU_SHARE_UUID\", relpath: \"code/main/code.js\" },\n  states: {},\n  timelines: {\n    Default: {\n      \"haiku:02c88cd178a9\": {\n        \"style.WebkitTapHighlightColor\": { \"0\": { value: \"rgba(0,0,0,0)\" } },\n        \"style.position\": { \"0\": { value: \"relative\" } },\n        \"style.overflowX\": { \"0\": { value: \"hidden\" } },\n        \"style.overflowY\": { \"0\": { value: \"hidden\" } },\n        \"sizeAbsolute.x\": { \"0\": { value: 550 } },\n        \"sizeAbsolute.y\": { \"0\": { value: 400 } },\n        \"sizeMode.x\": { \"0\": { value: 1 } },\n        \"sizeMode.y\": { \"0\": { value: 1 } },\n        \"sizeMode.z\": { \"0\": { value: 1 } }\n      },\n      \"haiku:7cb1d36a8584\": {\n        viewBox: { \"0\": { value: \"0 0 50 46\" } },\n        \"style.position\": { \"0\": { value: \"absolute\" } },\n        \"style.margin\": { \"0\": { value: \"0\" } },\n        \"style.padding\": { \"0\": { value: \"0\" } },\n        \"style.border\": { \"0\": { value: \"0\" } },\n        \"sizeAbsolute.x\": { \"0\": { value: 50 } },\n        \"sizeMode.x\": { \"0\": { value: 1 } },\n        \"sizeAbsolute.y\": { \"0\": { value: 46 } },\n        \"sizeMode.y\": { \"0\": { value: 1 } },\n        \"style.zIndex\": { \"0\": { value: 1 } }\n      },\n      \"haiku:bb8a90b7c6b5\": {\n        d: {\n          \"0\": {\n            value: \"M32.999,21.4233261 C30.173,15.7283261 21,17.3593261 21,24.6933261 C21,31.9633261 30.903,35.6313261 32.999,40.0043261 C35.095,35.6313261 44.999,31.9633261 44.999,24.6933261 C44.999,17.3663261 35.829,15.7213261 32.999,21.4233261 L32.999,21.4233261 Z\"\n          }\n        }\n      },\n      \"haiku:e172347c38a3\": {\n        x: { \"0\": { value: \"-95.8%\" } },\n        y: { \"0\": { value: \"-72.7%\" } },\n        filterUnits: { \"0\": { value: \"objectBoundingBox\" } },\n        \"sizeProportional.x\": { \"0\": { value: 2.917 } },\n        \"sizeMode.x\": { \"0\": { value: 0 } },\n        \"sizeProportional.y\": { \"0\": { value: 3.09 } },\n        \"sizeMode.y\": { \"0\": { value: 0 } }\n      },\n      \"haiku:d80a3bee608b\": {\n        dx: { \"0\": { value: \"0\" } },\n        dy: { \"0\": { value: \"7\" } },\n        in: { \"0\": { value: \"SourceAlpha\" } },\n        result: { \"0\": { value: \"shadowOffsetOuter1\" } }\n      },\n      \"haiku:9b3c3abc7808\": {\n        stdDeviation: { \"0\": { value: \"6.5\" } },\n        in: { \"0\": { value: \"shadowOffsetOuter1\" } },\n        result: { \"0\": { value: \"shadowBlurOuter1\" } }\n      },\n      \"haiku:282b5e403498\": {\n        values: {\n          \"0\": {\n            value: \"0 0 0 0 0.0823529412   0 0 0 0 0.101960784   0 0 0 0 0.105882353  0 0 0 0.200662364 0\"\n          }\n        },\n        in: { \"0\": { value: \"shadowBlurOuter1\" } }\n      },\n      \"haiku:c21c1e635969\": {\n        stroke: { \"0\": { value: \"none\" } },\n        \"stroke-width\": { \"0\": { value: \"1\" } },\n        fill: { \"0\": { value: \"none\" } },\n        \"fill-rule\": { \"0\": { value: \"evenodd\" } }\n      },\n      \"haiku:55cc2e2e3595\": {\n        \"fill-rule\": { \"0\": { value: \"nonzero\" } },\n        \"translation.x\": { \"0\": { value: -8 } },\n        \"translation.y\": { \"0\": { value: -12 } }\n      },\n      \"haiku:52c0aaaf9176\": {\n        fill: { \"0\": { value: \"black\" } },\n        \"fill-opacity\": { \"0\": { value: \"1\" } },\n        filter: { \"0\": { value: \"url(#filter-2-962b2f)\" } },\n        \"xlink:href\": { \"0\": { value: \"#path-1-962b2f\" } }\n      },\n      \"haiku:62af94277508\": {\n        fill: { \"0\": { value: \"#1673E5\" } },\n        \"fill-rule\": { \"0\": { value: \"evenodd\" } },\n        \"xlink:href\": { \"0\": { value: \"#path-1-962b2f\" } }\n      }\n    }\n  },\n  template: {\n    elementName: \"div\",\n    attributes: { \"haiku-title\": \"code\", \"haiku-id\": \"02c88cd178a9\" },\n    children: [\n      {\n        elementName: \"svg\",\n        attributes: {\n          version: \"1.1\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          \"xmlns:xlink\": \"http://www.w3.org/1999/xlink\",\n          source: \"designs/Heart.svg\",\n          \"haiku-title\": \"Heart\",\n          \"haiku-id\": \"7cb1d36a8584\"\n        },\n        children: [\n          {\n            elementName: \"title\",\n            attributes: { \"haiku-id\": \"49e9a23a5ab0\" },\n            children: [\"Heart\"]\n          },\n          {\n            elementName: \"desc\",\n            attributes: { \"haiku-id\": \"603d97f2ae30\" },\n            children: [\"Created with sketchtool.\"]\n          },\n          {\n            elementName: \"defs\",\n            attributes: { \"haiku-id\": \"a4b4e0d0f13a\" },\n            children: [\n              {\n                elementName: \"path\",\n                attributes: { id: \"path-1-962b2f\", \"haiku-id\": \"bb8a90b7c6b5\" },\n                children: []\n              },\n              {\n                elementName: \"filter\",\n                attributes: {\n                  id: \"filter-2-962b2f\",\n                  \"haiku-id\": \"e172347c38a3\"\n                },\n                children: [\n                  {\n                    elementName: \"feOffset\",\n                    attributes: { \"haiku-id\": \"d80a3bee608b\" },\n                    children: []\n                  },\n                  {\n                    elementName: \"feGaussianBlur\",\n                    attributes: { \"haiku-id\": \"9b3c3abc7808\" },\n                    children: []\n                  },\n                  {\n                    elementName: \"feColorMatrix\",\n                    attributes: { type: \"matrix\", \"haiku-id\": \"282b5e403498\" },\n                    children: []\n                  }\n                ]\n              }\n            ]\n          },\n          {\n            elementName: \"g\",\n            attributes: { id: \"Page-1\", \"haiku-id\": \"c21c1e635969\" },\n            children: [\n              {\n                elementName: \"g\",\n                attributes: { id: \"Hearts\", \"haiku-id\": \"55cc2e2e3595\" },\n                children: [\n                  {\n                    elementName: \"g\",\n                    attributes: { id: \"Heart\", \"haiku-id\": \"13fdd7fb107f\" },\n                    children: [\n                      {\n                        elementName: \"use\",\n                        attributes: { \"haiku-id\": \"52c0aaaf9176\" },\n                        children: []\n                      },\n                      {\n                        elementName: \"use\",\n                        attributes: { \"haiku-id\": \"62af94277508\" },\n                        children: []\n                      }\n                    ]\n                  }\n                ]\n              }\n            ]\n          }\n        ]\n      }\n    ]\n  }\n};\n", 'bytecode file updated correctly')
    })
  })
})
