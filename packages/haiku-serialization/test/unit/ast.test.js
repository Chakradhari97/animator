'use strict'

var test = require('tape')
var objectToOAST = require('./../../src/ast/objectToOAST')
var reifyOAST = require('./../../src/ast/reifyOAST')
// var fixture = require('./fixtures/ast.fixture')

test('ast', function (t) {
  t.plan(16)
  var o1 = {
    a: 1,
    b: '2',
    c: 3.3,
    d: null,
    e: null,
    f: [],
    g: [1, 2, 3],
    h: ['a', 'b', 'c'],
    i: [[1], [2], [3]],
    j: [['a'], ['b'], ['c']],
    k: [{_a: 1, _b: 2, _c: 3}],
    l: function (foo) { return foo + 1 },
    m: function _hello (hi) { return 'hi' },
    n: (a, b, c, d) => { return [d, a, b, c] },
    o: {
      oa: function (baz) { return baz },
      ob: {a: 1, b: 2, c: 3},
      oc: {a: {}, b: {}, c: {}},
      od: 'hello',
      oe: 1.0001,
      of: {
        '#123': 1,
        '.890': 2,
        0: 'zero',
        1000: 'one thousand',
        2001: 'two thousand and one'
      }
    }
  }
  var oast1 = objectToOAST(o1)
  t.equal(JSON.stringify(oast1), `{"type":"ObjectExpression","properties":[{"type":"ObjectProperty","key":{"type":"StringLiteral","value":"a"},"value":{"type":"NumericLiteral","value":1}},{"type":"ObjectProperty","key":{"type":"StringLiteral","value":"b"},"value":{"type":"StringLiteral","value":"2"}},{"type":"ObjectProperty","key":{"type":"StringLiteral","value":"c"},"value":{"type":"NumericLiteral","value":3.3}},{"type":"ObjectProperty","key":{"type":"StringLiteral","value":"d"},"value":{"type":"NullLiteral"}},{"type":"ObjectProperty","key":{"type":"StringLiteral","value":"e"},"value":{"type":"NullLiteral"}},{"type":"ObjectProperty","key":{"type":"StringLiteral","value":"f"},"value":{"type":"ArrayExpression","elements":[]}},{"type":"ObjectProperty","key":{"type":"StringLiteral","value":"g"},"value":{"type":"ArrayExpression","elements":[{"type":"NumericLiteral","value":1},{"type":"NumericLiteral","value":2},{"type":"NumericLiteral","value":3}]}},{"type":"ObjectProperty","key":{"type":"StringLiteral","value":"h"},"value":{"type":"ArrayExpression","elements":[{"type":"StringLiteral","value":"a"},{"type":"StringLiteral","value":"b"},{"type":"StringLiteral","value":"c"}]}},{"type":"ObjectProperty","key":{"type":"StringLiteral","value":"i"},"value":{"type":"ArrayExpression","elements":[{"type":"ArrayExpression","elements":[{"type":"NumericLiteral","value":1}]},{"type":"ArrayExpression","elements":[{"type":"NumericLiteral","value":2}]},{"type":"ArrayExpression","elements":[{"type":"NumericLiteral","value":3}]}]}},{"type":"ObjectProperty","key":{"type":"StringLiteral","value":"j"},"value":{"type":"ArrayExpression","elements":[{"type":"ArrayExpression","elements":[{"type":"StringLiteral","value":"a"}]},{"type":"ArrayExpression","elements":[{"type":"StringLiteral","value":"b"}]},{"type":"ArrayExpression","elements":[{"type":"StringLiteral","value":"c"}]}]}},{"type":"ObjectProperty","key":{"type":"StringLiteral","value":"k"},"value":{"type":"ArrayExpression","elements":[{"type":"ObjectExpression","properties":[{"type":"ObjectProperty","key":{"type":"StringLiteral","value":"_a"},"value":{"type":"NumericLiteral","value":1}},{"type":"ObjectProperty","key":{"type":"StringLiteral","value":"_b"},"value":{"type":"NumericLiteral","value":2}},{"type":"ObjectProperty","key":{"type":"StringLiteral","value":"_c"},"value":{"type":"NumericLiteral","value":3}}]}]}},{"type":"ObjectProperty","key":{"type":"StringLiteral","value":"l"},"value":{"type":"FunctionExpression","start":2,"end":35,"loc":{"start":{"line":2,"column":0},"end":{"line":2,"column":33}},"id":null,"generator":false,"expression":false,"async":false,"params":[{"type":"Identifier","start":12,"end":15,"loc":{"start":{"line":2,"column":10},"end":{"line":2,"column":13},"identifierName":"foo"},"name":"foo"}],"body":{"type":"BlockStatement","start":17,"end":35,"loc":{"start":{"line":2,"column":15},"end":{"line":2,"column":33}},"body":[{"type":"ReturnStatement","start":19,"end":33,"loc":{"start":{"line":2,"column":17},"end":{"line":2,"column":31}},"argument":{"type":"BinaryExpression","start":26,"end":33,"loc":{"start":{"line":2,"column":24},"end":{"line":2,"column":31}},"left":{"type":"Identifier","start":26,"end":29,"loc":{"start":{"line":2,"column":24},"end":{"line":2,"column":27},"identifierName":"foo"},"name":"foo"},"operator":"+","right":{"type":"NumericLiteral","start":32,"end":33,"loc":{"start":{"line":2,"column":30},"end":{"line":2,"column":31}},"extra":{"rawValue":1,"raw":"1"},"value":1}}}],"directives":[]},"extra":{"parenthesized":true,"parenStart":0}}},{"type":"ObjectProperty","key":{"type":"StringLiteral","value":"m"},"value":{"type":"FunctionExpression","start":2,"end":37,"loc":{"start":{"line":2,"column":0},"end":{"line":2,"column":35}},"id":{"type":"Identifier","start":11,"end":17,"loc":{"start":{"line":2,"column":9},"end":{"line":2,"column":15},"identifierName":"_hello"},"name":"_hello"},"generator":false,"expression":false,"async":false,"params":[{"type":"Identifier","start":18,"end":20,"loc":{"start":{"line":2,"column":16},"end":{"line":2,"column":18},"identifierName":"hi"},"name":"hi"}],"body":{"type":"BlockStatement","start":22,"end":37,"loc":{"start":{"line":2,"column":20},"end":{"line":2,"column":35}},"body":[{"type":"ReturnStatement","start":24,"end":35,"loc":{"start":{"line":2,"column":22},"end":{"line":2,"column":33}},"argument":{"type":"StringLiteral","start":31,"end":35,"loc":{"start":{"line":2,"column":29},"end":{"line":2,"column":33}},"extra":{"rawValue":"hi","raw":"\'hi\'"},"value":"hi"}}],"directives":[]},"extra":{"parenthesized":true,"parenStart":0}}},{"type":"ObjectProperty","key":{"type":"StringLiteral","value":"n"},"value":{"type":"ArrowFunctionExpression","start":2,"end":41,"loc":{"start":{"line":2,"column":0},"end":{"line":2,"column":39}},"id":null,"generator":false,"expression":false,"async":false,"params":[{"type":"Identifier","start":3,"end":4,"loc":{"start":{"line":2,"column":1},"end":{"line":2,"column":2},"identifierName":"a"},"name":"a"},{"type":"Identifier","start":6,"end":7,"loc":{"start":{"line":2,"column":4},"end":{"line":2,"column":5},"identifierName":"b"},"name":"b"},{"type":"Identifier","start":9,"end":10,"loc":{"start":{"line":2,"column":7},"end":{"line":2,"column":8},"identifierName":"c"},"name":"c"},{"type":"Identifier","start":12,"end":13,"loc":{"start":{"line":2,"column":10},"end":{"line":2,"column":11},"identifierName":"d"},"name":"d"}],"body":{"type":"BlockStatement","start":18,"end":41,"loc":{"start":{"line":2,"column":16},"end":{"line":2,"column":39}},"body":[{"type":"ReturnStatement","start":20,"end":39,"loc":{"start":{"line":2,"column":18},"end":{"line":2,"column":37}},"argument":{"type":"ArrayExpression","start":27,"end":39,"loc":{"start":{"line":2,"column":25},"end":{"line":2,"column":37}},"elements":[{"type":"Identifier","start":28,"end":29,"loc":{"start":{"line":2,"column":26},"end":{"line":2,"column":27},"identifierName":"d"},"name":"d"},{"type":"Identifier","start":31,"end":32,"loc":{"start":{"line":2,"column":29},"end":{"line":2,"column":30},"identifierName":"a"},"name":"a"},{"type":"Identifier","start":34,"end":35,"loc":{"start":{"line":2,"column":32},"end":{"line":2,"column":33},"identifierName":"b"},"name":"b"},{"type":"Identifier","start":37,"end":38,"loc":{"start":{"line":2,"column":35},"end":{"line":2,"column":36},"identifierName":"c"},"name":"c"}]}}],"directives":[]},"extra":{"parenthesized":true,"parenStart":0}}},{"type":"ObjectProperty","key":{"type":"StringLiteral","value":"o"},"value":{"type":"ObjectExpression","properties":[{"type":"ObjectProperty","key":{"type":"StringLiteral","value":"oa"},"value":{"type":"FunctionExpression","start":2,"end":31,"loc":{"start":{"line":2,"column":0},"end":{"line":2,"column":29}},"id":null,"generator":false,"expression":false,"async":false,"params":[{"type":"Identifier","start":12,"end":15,"loc":{"start":{"line":2,"column":10},"end":{"line":2,"column":13},"identifierName":"baz"},"name":"baz"}],"body":{"type":"BlockStatement","start":17,"end":31,"loc":{"start":{"line":2,"column":15},"end":{"line":2,"column":29}},"body":[{"type":"ReturnStatement","start":19,"end":29,"loc":{"start":{"line":2,"column":17},"end":{"line":2,"column":27}},"argument":{"type":"Identifier","start":26,"end":29,"loc":{"start":{"line":2,"column":24},"end":{"line":2,"column":27},"identifierName":"baz"},"name":"baz"}}],"directives":[]},"extra":{"parenthesized":true,"parenStart":0}}},{"type":"ObjectProperty","key":{"type":"StringLiteral","value":"ob"},"value":{"type":"ObjectExpression","properties":[{"type":"ObjectProperty","key":{"type":"StringLiteral","value":"a"},"value":{"type":"NumericLiteral","value":1}},{"type":"ObjectProperty","key":{"type":"StringLiteral","value":"b"},"value":{"type":"NumericLiteral","value":2}},{"type":"ObjectProperty","key":{"type":"StringLiteral","value":"c"},"value":{"type":"NumericLiteral","value":3}}]}},{"type":"ObjectProperty","key":{"type":"StringLiteral","value":"oc"},"value":{"type":"ObjectExpression","properties":[{"type":"ObjectProperty","key":{"type":"StringLiteral","value":"a"},"value":{"type":"ObjectExpression","properties":[]}},{"type":"ObjectProperty","key":{"type":"StringLiteral","value":"b"},"value":{"type":"ObjectExpression","properties":[]}},{"type":"ObjectProperty","key":{"type":"StringLiteral","value":"c"},"value":{"type":"ObjectExpression","properties":[]}}]}},{"type":"ObjectProperty","key":{"type":"StringLiteral","value":"od"},"value":{"type":"StringLiteral","value":"hello"}},{"type":"ObjectProperty","key":{"type":"StringLiteral","value":"oe"},"value":{"type":"NumericLiteral","value":1.0001}},{"type":"ObjectProperty","key":{"type":"StringLiteral","value":"of"},"value":{"type":"ObjectExpression","properties":[{"type":"ObjectProperty","key":{"type":"StringLiteral","value":"0"},"value":{"type":"StringLiteral","value":"zero"}},{"type":"ObjectProperty","key":{"type":"StringLiteral","value":"1000"},"value":{"type":"StringLiteral","value":"one thousand"}},{"type":"ObjectProperty","key":{"type":"StringLiteral","value":"2001"},"value":{"type":"StringLiteral","value":"two thousand and one"}},{"type":"ObjectProperty","key":{"type":"StringLiteral","value":"#123"},"value":{"type":"NumericLiteral","value":1}},{"type":"ObjectProperty","key":{"type":"StringLiteral","value":".890"},"value":{"type":"NumericLiteral","value":2}}]}}]}}]}`, 'produces a correct ast')
  var ro1 = reifyOAST(oast1)
  for (var key in ro1) {
    t.ok(JSON.stringify(ro1[key]) === JSON.stringify(o1[key]), 'reified value is equivalent')
  }
})
